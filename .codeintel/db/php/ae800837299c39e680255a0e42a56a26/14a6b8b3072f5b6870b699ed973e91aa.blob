<scope ilk="blob" lang="PHP" name="Dependency2.php" src="/usr/share/php/PEAR/Dependency2.php"><import line="20" module="PEAR/Validate.php" /><import line="90" module="PEAR/DependencyDB.php" /><import line="107" module="OS/Guess.php" /><import line="895" module="PEAR/Downloader/Package.php" /><import line="1175" module="PEAR/Downloader/Package.php" /><scope doc="Dependency check for PEAR packages&#xA;&#xA;This class handles both version 1.0 and 2.0 dependencies&#xA;WARNING: *any* changes to this class must be duplicated in the&#xA;test_PEAR_Dependency2 class found in tests/PEAR_Dependency2/setup.php.inc,&#xA;or unit tests will not actually validate the changes&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.9.4&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a1" ilk="class" line="38" lineend="1358" name="PEAR_Dependency2"><variable citdl="integer" doc="One of the PEAR_VALIDATE_* states&#xA;@see PEAR_VALIDATE_NORMAL&#xA;@var integer" line="45" name="_state" /><variable citdl="installoptions" line="51" name="_options" /><variable citdl="OS_Guess" doc="@var OS_Guess" line="56" name="_os" /><variable citdl="PEAR_Registry" doc="@var PEAR_Registry" line="61" name="_registry" /><variable citdl="PEAR_Config" doc="@var PEAR_Config" line="66" name="_config" /><variable citdl="PEAR_DependencyDB" doc="@var PEAR_DependencyDB" line="71" name="_dependencydb" /><variable citdl="array" doc="Output of PEAR_Registry::parsedPackageName()&#xA;@var array" line="77" name="_currentPackage" /><scope attributes="__ctor__" doc="@param PEAR_Config&#xA;@param array installation options&#xA;@param array format of PEAR_Registry::parsedPackageName()&#xA;@param int installation state (one of PEAR_VALIDATE_*)" ilk="function" line="85" lineend="112" name="PEAR_Dependency2" signature="PEAR_Dependency2(&amp; $config, $installoptions, $package, $state = PEAR_VALIDATE_INSTALLING)"><variable ilk="argument" line="85" name="config" /><variable ilk="argument" line="85" name="installoptions" /><variable ilk="argument" line="85" name="package" /><variable default="PEAR_VALIDATE_INSTALLING" ilk="argument" line="85" name="state" /></scope><scope ilk="function" line="114" lineend="160" name="_getExtraString" returns="string" signature="_getExtraString($dep)"><variable ilk="argument" line="114" name="dep" /><variable line="145" name="i" /><variable citdl="dep[]" line="145" name="exclude" /><variable citdl="string" line="116" name="extra" /></scope><scope doc="&#xA;This makes unit-testing a heck of a lot easier&#xA;" ilk="function" line="165" lineend="168" name="getPHP_OS" signature="getPHP_OS()" /><scope doc="&#xA;This makes unit-testing a heck of a lot easier&#xA;" ilk="function" line="173" lineend="176" name="getsysname" returns="this._os.getSysname()" signature="getsysname()" /><scope doc="&#xA;Specify a dependency on an OS.  Use arch for detailed os/processor information&#xA;There are two generic OS dependencies that will be the most common, unix and windows.&#xA;Other options are linux, freebsd, darwin (OS X), sunos, irix, hpux, aix&#xA;" ilk="function" line="184" lineend="262" name="validateOsDependency" returns="boolean" signature="validateOsDependency($dep)"><variable ilk="argument" line="184" name="dep" /><variable line="194" name="not" /><variable citdl="array()" line="216" name="unices" /></scope><scope doc="&#xA;This makes unit-testing a heck of a lot easier&#xA;" ilk="function" line="267" lineend="270" name="matchSignature" returns="this._os.matchSignature()" signature="matchSignature($pattern)"><variable ilk="argument" line="267" name="pattern" /></scope><scope doc="&#xA;Specify a complex dependency on an OS/processor/kernel version,&#xA;Use OS for simple operating system dependency.&#xA;This is the only dependency that accepts an eregable pattern.  The pattern&#xA;will be matched against the php_uname() output parsed by OS_Guess&#xA;" ilk="function" line="279" lineend="311" name="validateArchDependency" returns="boolean" signature="validateArchDependency($dep)"><variable ilk="argument" line="279" name="dep" /><variable line="285" name="not" /></scope><scope doc="&#xA;This makes unit-testing a heck of a lot easier&#xA;" ilk="function" line="316" lineend="319" name="extension_loaded" returns="extension_loaded()" signature="extension_loaded($name)"><variable ilk="argument" line="316" name="name" /></scope><scope doc="&#xA;This makes unit-testing a heck of a lot easier&#xA;" ilk="function" line="324" lineend="331" name="phpversion" returns="phpversion()" signature="phpversion($name = null)"><variable default="null" ilk="argument" line="324" name="name" /></scope><scope ilk="function" line="333" lineend="480" name="validateExtensionDependency" returns="boolean" signature="validateExtensionDependency($dep, $required = true)"><variable ilk="argument" line="333" name="dep" /><variable default="true" ilk="argument" line="333" name="required" /><variable citdl="boolean" line="407" name="fail" /><variable citdl="this.extension_loaded()" line="340" name="loaded" /><variable citdl="string" line="402" name="version" /><variable citdl="dep[]" line="435" name="exclude" /><variable citdl="this._getExtraString()" line="341" name="extra" /></scope><scope ilk="function" line="482" lineend="537" name="validatePhpDependency" returns="boolean" signature="validatePhpDependency($dep)"><variable ilk="argument" line="482" name="dep" /><variable citdl="dep[]" line="522" name="exclude" /><variable citdl="this.phpversion()" line="489" name="version" /><variable citdl="this._getExtraString()" line="490" name="extra" /></scope><scope doc="&#xA;This makes unit-testing a heck of a lot easier&#xA;" ilk="function" line="542" lineend="545" name="getPEARVersion" returns="string" signature="getPEARVersion()" /><scope ilk="function" line="547" lineend="598" name="validatePearinstallerDependency" returns="this.raiseError()" signature="validatePearinstallerDependency($dep)"><variable ilk="argument" line="547" name="dep" /><variable citdl="dep[]" line="584" name="exclude" /><variable citdl="this._getExtraString()" line="550" name="extra" /><variable citdl="this.getPEARVersion()" line="549" name="pearversion" /></scope><scope ilk="function" line="600" lineend="603" name="validateSubpackageDependency" returns="this.validatePackageDependency()" signature="validateSubpackageDependency($dep, $required, $params)"><variable ilk="argument" line="600" name="dep" /><variable ilk="argument" line="600" name="required" /><variable ilk="argument" line="600" name="params" /></scope><scope doc="&#xA;&lt;array&gt; dependency  - information (2.0 format)&#xA;&lt;boolean&gt; whether  - this is a required dependency&#xA;&lt;array&gt; a  - list of downloaded packages to be installed, if any&#xA;&lt;boolean&gt; if  - true, then deps on pear.php.net that fail will also check&#xA;               against pecl.php.net packages to accomodate extensions that have&#xA;               moved to pecl.php.net from pear.php.net&#xA;" ilk="function" line="613" lineend="641" name="validatePackageDependency" returns="boolean" signature="validatePackageDependency($dep, $required, $params, $depv1 = false)"><variable ilk="argument" line="613" name="dep" /><variable ilk="argument" line="613" name="required" /><variable ilk="argument" line="613" name="params" /><variable default="false" ilk="argument" line="613" name="depv1" /><variable citdl="dep" line="622" name="save" /><variable citdl="this.validateExtensionDependency()" line="626" name="ret" /><variable citdl="dep" line="623" name="subdep" /></scope><scope ilk="function" line="643" lineend="870" name="_validatePackageDownload" returns="this.raiseError()" signature="_validatePackageDownload($dep, $required, $params, $depv1 = false)"><variable ilk="argument" line="643" name="dep" /><variable ilk="argument" line="643" name="required" /><variable ilk="argument" line="643" name="params" /><variable default="false" ilk="argument" line="643" name="depv1" /><variable citdl="dep[]" line="795" name="exclude" /><variable citdl="params[]" line="835" name="parent" /><variable citdl="this._getExtraString()" line="704" name="extra" /><variable citdl="params[]" line="652" name="param" /><variable citdl="installed" line="681" name="installed" /><variable citdl="boolean" line="682" name="downloaded" /><variable citdl="this._registry.packageinfo()" line="680" name="version" /><variable citdl="string" line="715" name="rest" /><variable citdl="boolean" line="651" name="found" /><variable citdl="boolean" line="761" name="fail" /><variable citdl="this._registry.parsedPackageNameToString()" line="650" name="depname" /></scope><scope ilk="function" line="872" lineend="875" name="_validatePackageInstall" returns="this._validatePackageDownload()" signature="_validatePackageInstall($dep, $required, $depv1 = false)"><variable ilk="argument" line="872" name="dep" /><variable ilk="argument" line="872" name="required" /><variable default="false" ilk="argument" line="872" name="depv1" /></scope><scope doc="&#xA;Verify that uninstalling packages passed in to command line is OK.&#xA;&lt;pear_installer&gt; $dl  - &#xA;Returns pear_error|true &#xA;" ilk="function" line="883" lineend="1092" name="validatePackageUninstall" returns="PEAR_Error" signature="pear_error validatePackageUninstall(PEAR_Installer &amp; $dl)"><variable citdl="PEAR_Installer" ilk="argument" line="883" name="dl" /><variable citdl="badpackages[]" line="908" name="warning" /><variable citdl="this._dependencydb.getDependencies()" line="947" name="pardeps" /><variable citdl="strtolower()" line="904" name="memyselfandI" /><variable citdl="boolean" line="1001" name="fail" /><variable citdl="allparents[]" line="973" name="d1" /><variable citdl="dl.___uninstall_package_cache" line="906" name="badpackages" /><variable citdl="params[]" line="938" name="param" /><variable citdl="this._registry.getPackage()" line="1038" name="pa" /><variable citdl="array()" line="889" name="params" /><variable citdl="this._validatePackageUninstall()" line="1049" name="test" /><variable citdl="downloaded[]" line="893" name="pf" /><variable line="1007" name="kid" /><variable citdl="d1[]" line="1008" name="depinfo" /><variable citdl="packagedeps[]" line="973" name="parent" /><variable citdl="this._registry.parsePackageName()" line="1036" name="packagename" /><variable citdl="array()" line="936" name="perpackagelist" /><variable citdl="remove[]" line="1002" name="unused" /><variable citdl="dl.getUninstallPackages()" line="892" name="downloaded" /><variable citdl="array()" line="937" name="allparents" /><variable citdl="perpackagelist[]" line="1030" name="packagedeps" /><variable citdl="PEAR_Downloader_Package" line="897" name="dp" /><variable citdl="array()" line="999" name="badchildren" /><variable citdl="array()" line="942" name="a" /><variable citdl="this._currentPackage" line="1029" name="save" /><variable citdl="d1[]" line="946" name="d" /><variable line="1002" name="package" /><variable citdl="pardeps[]" line="948" name="dep" /><variable citdl="array()" line="972" name="remove" /><variable line="893" name="i" /><variable citdl="this._dependencydb.getDependentPackages()" line="944" name="deps" /><variable citdl="badpackages[]" line="914" name="error" /></scope><scope ilk="function" line="1094" lineend="1149" name="_validatePackageUninstall" returns="boolean" signature="_validatePackageUninstall($dep, $required, $dl)"><variable ilk="argument" line="1094" name="dep" /><variable ilk="argument" line="1094" name="required" /><variable ilk="argument" line="1094" name="dl" /><variable citdl="boolean" line="1126" name="fail" /><variable citdl="this._registry.parsedPackageNameToString()" line="1096" name="depname" /><variable citdl="this._registry.packageinfo()" line="1097" name="version" /><variable citdl="required" line="1136" name="saverequired" /><variable citdl="this._getExtraString()" line="1102" name="extra" /></scope><scope doc="validate a downloaded package against installed packages&#xA;&#xA;As of PEAR 1.4.3, this will only validate&#xA;&#xA;@param array|PEAR_Downloader_Package|PEAR_PackageFile_v1|PEAR_PackageFile_v2&#xA;             $pkg package identifier (either&#xA;                  array(&apos;package&apos; =&gt; blah, &apos;channel&apos; =&gt; blah) or an array with&#xA;                  index &apos;info&apos; referencing an object)&#xA;@param PEAR_Downloader $dl&#xA;@param array $params full list of packages to install&#xA;@return true|PEAR_Error" ilk="function" line="1164" lineend="1225" name="validatePackage" returns="true" signature="true validatePackage($pkg, PEAR_Downloader &amp; $dl, array $params = array())"><variable ilk="argument" line="1164" name="pkg" /><variable citdl="PEAR_Downloader" ilk="argument" line="1164" name="dl" /><variable citdl="array" default="array()" ilk="argument" line="1164" name="params" /><variable citdl="deps[]" line="1186" name="info" /><variable citdl="ds[]" line="1201" name="d" /><variable line="1187" name="package" /><variable citdl="d" line="1204" name="dep" /><variable citdl="d" line="1205" name="required" /><variable citdl="checker._validatePackageDownload()" line="1206" name="ret" /><variable citdl="params[]" line="1188" name="packd" /><variable citdl="PEAR_Dependency2" line="1203" name="checker" /><variable line="1186" name="channel" /><variable citdl="this._dependencydb.getDependentPackageDependencies()" line="1167" name="deps" /><variable citdl="boolean" line="1172" name="fail" /><variable citdl="info[]" line="1187" name="ds" /><variable citdl="PEAR_Downloader_Package" line="1178" name="dp" /></scope><scope doc="&#xA;validate a package.xml 1.0 dependency&#xA;" ilk="function" line="1230" lineend="1245" name="validateDependency1" returns="this.raiseError()" signature="validateDependency1($dep, $params = array())"><variable ilk="argument" line="1230" name="dep" /><variable default="array()" ilk="argument" line="1230" name="params" /><variable attributes="__not_yet_defined__" line="1236" name="type" /><variable attributes="__not_yet_defined__" line="1236" name="newdep" /></scope><scope doc="&#xA;Convert a 1.0 dep into a 2.0 dep&#xA;" ilk="function" line="1250" lineend="1318" name="normalizeDep" returns="array()" signature="normalizeDep($dep)"><variable ilk="argument" line="1250" name="dep" /><variable citdl="types" line="1263" name="type" /><variable citdl="array()" line="1257" name="types" /><variable citdl="array()" line="1265" name="newdep" /></scope><scope doc="&#xA;Converts text comparing operators to them sign equivalents&#xA;Example: &apos;ge&apos; to &apos;&gt;=&apos;&#xA;Access public&#xA;&lt;string&gt; Operator  - &#xA;Returns string  - Sign equivalent&#xA;" ilk="function" line="1329" lineend="1341" name="signOperator" returns="string" signature="string signOperator($operator)"><variable ilk="argument" line="1329" name="operator" /></scope><scope ilk="function" line="1343" lineend="1351" name="raiseError" returns="this.warning()" signature="raiseError($msg)"><variable ilk="argument" line="1343" name="msg" /></scope><scope ilk="function" line="1353" lineend="1357" name="warning" returns="array()" signature="warning($msg)"><variable ilk="argument" line="1353" name="msg" /></scope></scope></scope>