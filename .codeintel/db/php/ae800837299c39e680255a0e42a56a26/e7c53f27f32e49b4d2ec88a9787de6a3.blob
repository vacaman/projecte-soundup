<scope ilk="blob" lang="PHP" name="Validate.php" src="/usr/share/php/PEAR/Validate.php"><import line="25" module="PEAR/Common.php" /><import line="26" module="PEAR/Validator/PECL.php" /><variable citdl="int" ilk="constant" line="19" name="PEAR_VALIDATE_INSTALLING" /><variable citdl="int" ilk="constant" line="20" name="PEAR_VALIDATE_UNINSTALLING" /><variable citdl="int" ilk="constant" line="21" name="PEAR_VALIDATE_NORMAL" /><variable citdl="int" ilk="constant" line="22" name="PEAR_VALIDATE_DOWNLOADING" /><variable citdl="int" ilk="constant" line="23" name="PEAR_VALIDATE_PACKAGING" /><scope doc="Validation class for package.xml - channel-level advanced validation&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.9.4&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a1" ilk="class" line="39" lineend="629" name="PEAR_Validate"><variable citdl="_PEAR_COMMON_PACKAGE_NAME_PREG" line="41" name="packageregex" /><variable citdl="PEAR_PackageFile_v1" doc="@var PEAR_PackageFile_v1|PEAR_PackageFile_v2" line="45" name="_packagexml" /><variable citdl="int" doc="@var int one of the PEAR_VALIDATE_* constants" line="49" name="_state" /><variable citdl="array" doc="Format: (&apos;error&apos; =&gt; array(&apos;field&apos; =&gt; name, &apos;reason&apos; =&gt; reason), &apos;warning&apos; =&gt; same)&#xA;@var array&#xA;@access private" line="55" name="_failures" /><scope doc="Override this method to handle validation of normal package names&#xA;@param string&#xA;@return bool&#xA;@access protected" ilk="function" line="63" lineend="66" name="_validPackageName" returns="bool" signature="bool _validPackageName($name)"><variable ilk="argument" line="63" name="name" /></scope><scope doc="&#xA;&lt;string&gt; package  - name to validate&#xA;&lt;string&gt; name  - of channel-specific validation package&#xA;Final&#xA;" ilk="function" line="73" lineend="81" name="validPackageName" returns="boolean" signature="validPackageName($name, $validatepackagename = false)"><variable ilk="argument" line="73" name="name" /><variable default="false" ilk="argument" line="73" name="validatepackagename" /></scope><scope doc="This validates a bundle name, and bundle names must conform&#xA;to the PEAR naming convention, so the method is final and static.&#xA;@param string&#xA;@final&#xA;@static" ilk="function" line="90" lineend="93" name="validGroupName" returns="boolean" signature="validGroupName($name)"><variable ilk="argument" line="90" name="name" /></scope><scope doc="Determine whether $state represents a valid stability level&#xA;@param string&#xA;@return bool&#xA;@static&#xA;@final" ilk="function" line="102" lineend="105" name="validState" returns="bool" signature="bool validState($state)"><variable ilk="argument" line="102" name="state" /></scope><scope doc="&#xA;Get a list of valid stability levels&#xA;Returns array &#xA;Static&#xA;Final&#xA;" ilk="function" line="113" lineend="116" name="getValidStates" returns="array" signature="array getValidStates()" /><scope doc="Determine whether a version is a properly formatted version number that can be used&#xA;by version_compare&#xA;@param string&#xA;@return bool&#xA;@static&#xA;@final" ilk="function" line="126" lineend="129" name="validVersion" returns="bool" signature="bool validVersion($ver)"><variable ilk="argument" line="126" name="ver" /></scope><scope doc="@param PEAR_PackageFile_v1|PEAR_PackageFile_v2" ilk="function" line="134" lineend="137" name="setPackageFile" signature="setPackageFile(&amp; $pf)"><variable ilk="argument" line="134" name="pf" /></scope><scope doc="&#xA;Access private&#xA;" ilk="function" line="142" lineend="145" name="_addFailure" signature="_addFailure($field, $reason)"><variable ilk="argument" line="142" name="field" /><variable ilk="argument" line="142" name="reason" /></scope><scope doc="&#xA;Access private&#xA;" ilk="function" line="150" lineend="153" name="_addWarning" signature="_addWarning($field, $reason)"><variable ilk="argument" line="150" name="field" /><variable ilk="argument" line="150" name="reason" /></scope><scope ilk="function" line="155" lineend="160" name="getFailures" returns="failures" signature="getFailures()"><variable citdl="this._failures" line="157" name="failures" /></scope><scope doc="&#xA;&lt;int&gt; one  - of the PEAR_VALIDATE_* constants&#xA;" ilk="function" line="165" lineend="196" name="validate" returns="boolean" signature="validate($state = null)"><variable default="null" ilk="argument" line="165" name="state" /></scope><scope doc="&#xA;Access protected&#xA;" ilk="function" line="201" lineend="240" name="validatePackageName" returns="boolean" signature="validatePackageName()"><variable citdl="array_shift()" line="210" name="test" /><variable citdl="substr()" line="215" name="majver" /><variable citdl="this._packagexml.getVersion()" line="208" name="version" /><variable citdl="this._packagexml.getPackage()" line="209" name="name" /><variable citdl="strlen()" line="214" name="vlen" /></scope><scope doc="&#xA;Access protected&#xA;" ilk="function" line="245" lineend="425" name="validateVersion" returns="boolean" signature="validateVersion()"><variable citdl="explode()" line="255" name="versioncomponents" /><variable citdl="substr()" line="334" name="majver" /><variable citdl="this._packagexml.getVersion()" line="254" name="version" /><variable citdl="this._packagexml.getPackage()" line="261" name="name" /><variable citdl="strlen()" line="333" name="vlen" /></scope><scope doc="&#xA;Access protected&#xA;" ilk="function" line="430" lineend="435" name="validateMaintainers" returns="boolean" signature="validateMaintainers()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="440" lineend="462" name="validateDate" returns="boolean" signature="validateDate()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="467" lineend="492" name="validateTime" returns="boolean" signature="validateTime()"><variable citdl="preg_match()" line="483" name="result" /></scope><scope doc="&#xA;Access protected&#xA;" ilk="function" line="497" lineend="511" name="validateState" returns="boolean" signature="validateState()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="516" lineend="536" name="validateStability" returns="ret" signature="validateStability()"><variable citdl="this._packagexml.getState()" line="519" name="packagestability" /><variable citdl="this._packagexml.getState()" line="520" name="apistability" /><variable citdl="boolean" line="518" name="ret" /><variable citdl="PEAR_Validate.getValidStates()" line="527" name="apistates" /></scope><scope doc="&#xA;Access protected&#xA;" ilk="function" line="541" lineend="544" name="validateSummary" returns="boolean" signature="validateSummary()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="549" lineend="552" name="validateDescription" returns="boolean" signature="validateDescription()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="557" lineend="560" name="validateLicense" returns="boolean" signature="validateLicense()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="565" lineend="568" name="validateNotes" returns="boolean" signature="validateNotes()" /><scope doc="&#xA;for package.xml 2.0 only - channels can&apos;t use package.xml 1.0&#xA;Access protected&#xA;" ilk="function" line="574" lineend="577" name="validateDependencies" returns="boolean" signature="validateDependencies()" /><scope doc="&#xA;for package.xml 1.0 only&#xA;Access private&#xA;" ilk="function" line="583" lineend="586" name="_validateFilelist" returns="boolean" signature="_validateFilelist()" /><scope doc="&#xA;for package.xml 2.0 only&#xA;Access protected&#xA;" ilk="function" line="592" lineend="595" name="validateMainFilelist" returns="boolean" signature="validateMainFilelist()" /><scope doc="&#xA;for package.xml 2.0 only&#xA;Access protected&#xA;" ilk="function" line="601" lineend="604" name="validateReleaseFilelist" returns="boolean" signature="validateReleaseFilelist()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="609" lineend="612" name="validateChangelog" returns="boolean" signature="validateChangelog()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="617" lineend="620" name="validateFilelist" returns="boolean" signature="validateFilelist()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="625" lineend="628" name="validateDeps" returns="boolean" signature="validateDeps()" /></scope></scope>