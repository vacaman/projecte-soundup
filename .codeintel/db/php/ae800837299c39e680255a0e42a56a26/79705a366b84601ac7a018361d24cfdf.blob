<scope ilk="blob" lang="PHP" name="XMLParser.php" src="/usr/share/php/PEAR/XMLParser.php"><import line="83" module="PEAR.php" /><import line="112" module="PEAR.php" /><scope doc="Parser for any xml file&#xA;@category  pear&#xA;@package   PEAR&#xA;@author    Greg Beaver &lt;cellog@php.net&gt;&#xA;@author    Stephan Schmidt (original XML_Unserializer code)&#xA;@copyright 1997-2009 The Authors&#xA;@license   http://opensource.org/licenses/bsd-license New BSD License&#xA;@version   Release: 1.9.4&#xA;@link      http://pear.php.net/package/PEAR&#xA;@since     Class available since Release 1.4.0a1" ilk="class" line="30" lineend="253" name="PEAR_XMLParser"><variable citdl="string" doc="unserilialized data&#xA;@var string $_serializedData" line="36" name="_unserializedData" /><variable citdl="string" doc="name of the root tag&#xA;@var string $_root" line="42" name="_root" /><variable citdl="array" doc="stack for all data that is found&#xA;@var array    $_dataStack" line="48" name="_dataStack" /><variable citdl="array" doc="stack for all values that are generated&#xA;@var array    $_valStack" line="54" name="_valStack" /><variable citdl="int" doc="current tag depth&#xA;@var int    $_depth" line="60" name="_depth" /><variable citdl="string" doc="The XML encoding to use&#xA;@var string $encoding" line="66" name="encoding" /><scope doc="&#xA;Returns array &#xA;" ilk="function" line="71" lineend="74" name="getData" returns="array" signature="array getData()" /><scope doc="&#xA;&lt;string&gt; xml  - content&#xA;Returns true|pear_error &#xA;" ilk="function" line="80" lineend="117" name="parse" returns="true" signature="true parse($data)"><variable ilk="argument" line="80" name="data" /><variable citdl="xml_error_string()" line="109" name="msg" /><variable citdl="xml_parser_create()" line="103" name="xp" /><variable citdl="xml_get_current_line_number()" line="110" name="line" /></scope><scope doc="&#xA;Start element handler for XML parser&#xA;Access private&#xA;&lt;object&gt; $parser  - XML parser object&#xA;&lt;string&gt; $element  - XML element&#xA;&lt;array&gt; $attribs  - attributes of XML tag&#xA;Returns void &#xA;" ilk="function" line="128" lineend="148" name="startHandler" signature="void startHandler(object $parser, string $element, array $attribs)"><variable citdl="object" ilk="argument" line="128" name="parser" /><variable citdl="string" ilk="argument" line="128" name="element" /><variable citdl="array" ilk="argument" line="128" name="attribs" /><variable citdl="array()" line="139" name="val" /></scope><scope doc="&#xA;post-process data&#xA;&lt;string&gt; $data  - &#xA;&lt;string&gt; $element  - element name&#xA;" ilk="function" line="156" lineend="159" name="postProcess" returns="trim()" signature="postProcess(string $data, string $element)"><variable citdl="string" ilk="argument" line="156" name="data" /><variable citdl="string" ilk="argument" line="156" name="element" /></scope><scope doc="End element handler for XML parser&#xA;&#xA;@access private&#xA;@param  object XML parser object&#xA;@param  string&#xA;@return void" ilk="function" line="169" lineend="239" name="endHandler" signature="void endHandler($parser, $element)"><variable ilk="argument" line="169" name="parser" /><variable ilk="argument" line="169" name="element" /><variable citdl="this.postProcess()" line="172" name="data" /><variable citdl="array_pop()" line="171" name="value" /></scope><scope doc="&#xA;Handler for character data&#xA;Access private&#xA;&lt;object&gt; XML  - parser object&#xA;&lt;string&gt; CDATA  - &#xA;Returns void &#xA;" ilk="function" line="249" lineend="252" name="cdataHandler" signature="void cdataHandler($parser, $cdata)"><variable ilk="argument" line="249" name="parser" /><variable ilk="argument" line="249" name="cdata" /></scope></scope></scope>