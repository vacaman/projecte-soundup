<scope ilk="blob" lang="PHP" name="Downloader.php" src="/usr/share/php/PEAR/Downloader.php"><import line="23" module="PEAR/Common.php" /><import line="189" module="System.php" /><import line="209" module="PEAR/ChannelFile.php" /><import line="241" module="PEAR/Downloader/Package.php" /><import line="257" module="PEAR/Dependency2.php" /><import line="315" module="System.php" /><import line="732" module="System.php" /><import line="890" module="PEAR/PackageFile/v2.php" /><import line="897" module="PEAR/PackageFile/v1.php" /><import line="1029" module="PEAR/PackageFile/v2.php" /><import line="1035" module="PEAR/PackageFile/v1.php" /><import line="1192" module="Structures/Graph.php" /><import line="1193" module="Structures/Graph/Node.php" /><import line="1194" module="Structures/Graph/Manipulator/TopologicalSorter.php" /><variable citdl="int" ilk="constant" line="25" name="PEAR_INSTALLER_OK" /><variable citdl="int" ilk="constant" line="26" name="PEAR_INSTALLER_FAILED" /><variable ilk="constant" line="27" name="PEAR_INSTALLER_SKIPPED" /><variable citdl="int" ilk="constant" line="28" name="PEAR_INSTALLER_ERROR_NO_PREF_STATE" /><scope classrefs="PEAR_Common" doc="Administration class used to download anything from the internet (PEAR Packages,&#xA;static URLs, xml files)&#xA;&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@author     Stig Bakken &lt;ssb@php.net&gt;&#xA;@author     Tomas V. V. Cox &lt;cox@idecnet.com&gt;&#xA;@author     Martin Jansen &lt;mj@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.9.4&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.3.0" ilk="class" line="46" lineend="1766" name="PEAR_Downloader"><variable citdl="PEAR_Registry" doc="@var PEAR_Registry&#xA;@access private" line="52" name="_registry" /><variable citdl="string" doc="Preferred Installation State (snapshot, devel, alpha, beta, stable)&#xA;@var string|null&#xA;@access private" line="59" name="_preferredState" /><variable citdl="array" doc="Options from command-line passed to Install.&#xA;&#xA;Recognized options:&lt;br /&gt;&#xA; - onlyreqdeps   : install all required dependencies as well&#xA; - alldeps       : install all dependencies, including optional&#xA; - installroot   : base relative path to install files in&#xA; - force         : force a download even if warnings would prevent it&#xA; - nocompress    : download uncompressed tarballs&#xA;@see PEAR_Command_Install&#xA;@access private&#xA;@var array" line="74" name="_options" /><variable citdl="array" doc="Downloaded Packages after a call to download().&#xA;&#xA;Format of each entry:&#xA;&#xA;&lt;code&gt;&#xA;array(&apos;pkg&apos; =&gt; &apos;package_name&apos;, &apos;file&apos; =&gt; &apos;/path/to/local/file&apos;,&#xA;   &apos;info&apos; =&gt; array() // parsed package.xml&#xA;);&#xA;&lt;/code&gt;&#xA;@access private&#xA;@var array" line="89" name="_downloadedPackages" /><variable citdl="array" doc="Packages slated for download.&#xA;&#xA;This is used to prevent downloading a package more than once should it be a dependency&#xA;for two packages to be installed.&#xA;Format of each entry:&#xA;&#xA;&lt;pre&gt;&#xA;array(&apos;package_name1&apos; =&gt; parsed package.xml, &apos;package_name2&apos; =&gt; parsed package.xml,&#xA;);&#xA;&lt;/pre&gt;&#xA;@access private&#xA;@var array" line="105" name="_toDownload" /><variable citdl="array" doc="Array of every package installed, with names lower-cased.&#xA;&#xA;Format:&#xA;&lt;code&gt;&#xA;array(&apos;package1&apos; =&gt; 0, &apos;package2&apos; =&gt; 1, );&#xA;&lt;/code&gt;&#xA;@var array" line="116" name="_installed" /><variable citdl="array" doc="@var array&#xA;@access private" line="122" name="_errorStack" /><variable citdl="boolean" doc="@var boolean&#xA;@access private" line="128" name="_internalDownload" /><variable citdl="array" doc="Temporary variable used in sorting packages by dependency in {@link sortPkgDeps()}&#xA;@var array&#xA;@access private" line="135" name="_packageSortTree" /><variable citdl="string" doc="Temporary directory, or configuration value where downloads will occur&#xA;@var string" line="141" name="_downloadDir" /><scope attributes="__ctor__" doc="@param PEAR_Frontend_*&#xA;@param array&#xA;@param PEAR_Config" ilk="function" line="148" lineend="175" name="PEAR_Downloader" signature="PEAR_Downloader(&amp; $ui, $options, &amp; $config)"><variable ilk="argument" line="148" name="ui" /><variable ilk="argument" line="148" name="options" /><variable ilk="argument" line="148" name="config" /><variable citdl="this._installed[]" line="167" name="unused" /><variable line="167" name="key" /><variable citdl="create_function()" line="171" name="strtolower" /></scope><variable citdl="config" line="152" name="config" /><variable citdl="ui" line="154" name="ui" /><scope doc="Attempt to discover a channel&apos;s remote capabilities from&#xA;its server name&#xA;@param string&#xA;@return boolean" ilk="function" line="183" lineend="231" name="discover" returns="boolean" signature="boolean discover($channel)"><variable ilk="argument" line="183" name="channel" /><variable citdl="System.mktemp()" line="193" name="tmp" /><variable citdl="this.downloadHttp()" line="194" name="a" /><variable citdl="PEAR_ChannelFile" line="212" name="b" /><variable citdl="b.getName()" line="217" name="alias" /><variable attributes="__not_yet_defined__" line="207" name="lastmodified" /><variable citdl="this.ui" line="187" name="callback" /><variable citdl="this.config.get()" line="192" name="tmpdir" /></scope><scope doc="For simpler unit-testing&#xA;@param PEAR_Downloader&#xA;@return PEAR_Downloader_Package" ilk="function" line="238" lineend="245" name="newDownloaderPackage" returns="PEAR_Downloader_Package" signature="pear_downloader_package &amp;newDownloaderPackage(&amp; $t)"><variable ilk="argument" line="238" name="t" /><variable citdl="PEAR_Downloader_Package" line="243" name="a" /></scope><scope doc="For simpler unit-testing&#xA;@param PEAR_Config&#xA;@param array&#xA;@param array&#xA;@param int" ilk="function" line="254" lineend="261" name="getDependency2Object" returns="z" signature="&amp;getDependency2Object(&amp; $c, $i, $p, $s)"><variable ilk="argument" line="254" name="c" /><variable ilk="argument" line="254" name="i" /><variable ilk="argument" line="254" name="p" /><variable ilk="argument" line="254" name="s" /><variable citdl="PEAR_Dependency2" line="259" name="z" /></scope><scope ilk="function" line="263" lineend="490" name="download" returns="a" signature="&amp;download($params)"><variable ilk="argument" line="263" name="params" /><variable citdl="array()" line="266" name="a" /><variable citdl="array()" line="446" name="newparams" /><variable citdl="array()" line="274" name="channelschecked" /><variable citdl="this._registry.parsedPackageNameToString()" line="421" name="name" /><variable citdl="this.analyzeDependencies()" line="279" name="err" /><variable citdl="params[]" line="452" name="package" /><variable line="276" name="i" /><variable citdl="this._registry.getChannel()" line="318" name="curchannel" /><variable citdl="params[]" line="276" name="param" /><variable citdl="string" line="330" name="url" /><variable citdl="boolean" line="451" name="somefailed" /><variable citdl="params" line="392" name="ret" /><variable citdl="this.config.get()" line="329" name="mirror" /><variable citdl="boolean" line="385" name="reverify" /><variable citdl="params" line="454" name="pf" /><variable citdl="this._prependPath()" line="355" name="checkdir" /><variable citdl="array()" line="417" name="errorparams" /></scope><scope doc="&#xA;&lt;array&gt; all  - packages to be installed&#xA;" ilk="function" line="495" lineend="710" name="analyzeDependencies" signature="analyzeDependencies(&amp; $params, $force = false)"><variable ilk="argument" line="495" name="params" /><variable default="false" ilk="argument" line="495" name="force" /><variable citdl="boolean" line="503" name="reset" /><variable citdl="deps[]" line="557" name="dep" /><variable attributes="__not_yet_defined__" line="567" name="e" /><variable citdl="dep[]" line="573" name="d" /><variable citdl="boolean" line="518" name="hasfailed" /><variable citdl="param.getGroup()" line="624" name="groupname" /><variable line="506" name="i" /><variable line="557" name="type" /><variable citdl="this.getDependency2Object()" line="510" name="depchecker" /><variable citdl="depchecker.validatePackage()" line="513" name="installcheck" /><variable citdl="params[]" line="506" name="param" /><variable citdl="deps[]" line="631" name="group" /><variable citdl="boolean" line="522" name="failed" /><variable citdl="param.getPackageFile()" line="511" name="send" /><variable citdl="param.getDeps()" line="507" name="deps" /><variable citdl="boolean" line="630" name="found" /><variable citdl="boolean" line="502" name="redo" /></scope><scope doc="&#xA;Retrieve the directory that downloads will happen in&#xA;Access private&#xA;Returns string &#xA;" ilk="function" line="717" lineend="751" name="getDownloadDir" returns="string" signature="string getDownloadDir()"><variable citdl="this.config.get()" line="723" name="downloaddir" /></scope><scope ilk="function" line="753" lineend="763" name="setDownloadDir" returns="PEAR.raiseError()" signature="setDownloadDir($dir)"><variable ilk="argument" line="753" name="dir" /></scope><scope ilk="function" line="765" lineend="773" name="configSet" signature="configSet($key, $value, $layer = &apos;user&apos;, $channel = false)"><variable ilk="argument" line="765" name="key" /><variable ilk="argument" line="765" name="value" /><variable default="&apos;user&apos;" ilk="argument" line="765" name="layer" /><variable default="false" ilk="argument" line="765" name="channel" /></scope><scope ilk="function" line="775" lineend="778" name="setOptions" signature="setOptions($options)"><variable ilk="argument" line="775" name="options" /></scope><scope ilk="function" line="780" lineend="783" name="getOptions" returns="this._options" signature="getOptions()" /><scope doc="&#xA;&lt;array&gt; output  - of {@link parsePackageName()}&#xA;Access private&#xA;" ilk="function" line="790" lineend="920" name="_getPackageDownloadUrl" returns="PEAR.raiseError()" signature="_getPackageDownloadUrl($parr)"><variable ilk="argument" line="790" name="parr" /><variable citdl="string" line="910" name="ext" /><variable citdl="rest.getDownloadURL()" line="850" name="url" /><variable citdl="boolean" line="842" name="downloadVersion" /><variable citdl="this._registry.getChannel()" line="809" name="chan" /><variable citdl="stability" line="797" name="state" /><variable citdl="this.config.getREST()" line="836" name="rest" /><variable citdl="this.config.get()" line="792" name="curchannel" /><variable citdl="this._registry.packageInfo()" line="816" name="stability" /><variable citdl="boolean" line="822" name="base2" /><variable citdl="this._registry.packageInfo()" line="815" name="version" /><variable citdl="PEAR_PackageFile_v2" line="891" name="pf" /><variable citdl="base2" line="837" name="base" /><variable citdl="this.config.get()" line="824" name="preferred_mirror" /></scope><scope doc="&#xA;&lt;array&gt; dependency  - array&#xA;Access private&#xA;" ilk="function" line="926" lineend="1062" name="_getDepPackageDownloadUrl" returns="chan" signature="_getDepPackageDownloadUrl($dep, $parr)"><variable ilk="argument" line="926" name="dep" /><variable ilk="argument" line="926" name="parr" /><variable citdl="this.newDownloaderPackage()" line="972" name="info" /><variable citdl="string" line="928" name="xsdversion" /><variable citdl="info.initialize()" line="974" name="err" /><variable citdl="dep" line="941" name="remotechannel" /><variable citdl="rest.getDepDownloadURL()" line="1008" name="url" /><variable line="992" name="base2" /><variable citdl="string" line="1049" name="ext" /><variable citdl="this._registry.getChannel()" line="932" name="chan" /><variable citdl="this.config.get()" line="929" name="curchannel" /><variable citdl="info.getChannel()" line="987" name="param" /><variable line="966" name="state" /><variable citdl="this._registry.packageInfo()" line="937" name="version" /><variable citdl="PEAR_PackageFile_v2" line="1031" name="pf" /><variable citdl="this.config.getREST()" line="1002" name="rest" /><variable citdl="base2" line="992" name="base" /></scope><scope doc="&#xA;Deprecated in favor of _getPackageDownloadUrl&#xA;" ilk="function" line="1067" lineend="1085" name="getPackageDownloadUrl" returns="string" signature="getPackageDownloadUrl($package, $version = null, $channel = false)"><variable ilk="argument" line="1067" name="package" /><variable default="null" ilk="argument" line="1067" name="version" /><variable default="false" ilk="argument" line="1067" name="channel" /><variable citdl="this._registry.getChannel()" line="1075" name="chan" /></scope><scope doc="&#xA;Retrieve a list of downloaded packages after a call to {@link download()}.&#xA;Also resets the list of downloaded packages.&#xA;Returns array &#xA;" ilk="function" line="1093" lineend="1099" name="getDownloadedPackages" returns="array" signature="array getDownloadedPackages()"><variable citdl="this._downloadedPackages" line="1095" name="ret" /></scope><scope ilk="function" line="1101" lineend="1131" name="_downloadCallback" signature="_downloadCallback($msg, $params = null)"><variable ilk="argument" line="1101" name="msg" /><variable default="null" ilk="argument" line="1101" name="params" /><variable citdl="string" line="1122" name="length" /><variable citdl="int" line="1113" name="bytes" /></scope><variable attributes="static" line="1111" name="bytes" /><scope ilk="function" line="1133" lineend="1148" name="_prependPath" returns="path" signature="_prependPath($path, $prepend)"><variable ilk="argument" line="1133" name="path" /><variable ilk="argument" line="1133" name="prepend" /></scope><scope doc="@param string&#xA;@param integer" ilk="function" line="1154" lineend="1157" name="pushError" signature="pushError($errmsg, $code = -1)"><variable ilk="argument" line="1154" name="errmsg" /><variable default="-1" ilk="argument" line="1154" name="code" /></scope><scope ilk="function" line="1159" lineend="1168" name="getErrorMsgs" returns="msgs" signature="getErrorMsgs()"><variable citdl="this._errorStack" line="1162" name="errs" /><variable citdl="errs[]" line="1163" name="err" /><variable citdl="array()" line="1161" name="msgs" /></scope><scope doc="&#xA;for BC&#xA;Deprecated&#xA;" ilk="function" line="1175" lineend="1180" name="sortPkgDeps" signature="sortPkgDeps(&amp; $packages, $uninstall = false)"><variable ilk="argument" line="1175" name="packages" /><variable default="false" ilk="argument" line="1175" name="uninstall" /></scope><scope doc="&#xA;Sort a list of arrays of array(downloaded packagefilename) by dependency.&#xA;This uses the topological sort method from graph theory, and the&#xA;Structures_Graph package to properly sort dependencies for installation.&#xA;&lt;array&gt; an  - array of downloaded PEAR_Downloader_Packages&#xA;Returns array  - array of array(packagefilename, package.xml contents)&#xA;" ilk="function" line="1190" lineend="1345" name="sortPackagesForInstall" returns="array" signature="array sortPackagesForInstall(&amp; $packages)"><variable ilk="argument" line="1190" name="packages" /><variable citdl="Structures_Graph_Manipulator_TopologicalSorter.sort()" line="1330" name="installOrder" /><variable citdl="array()" line="1331" name="ret" /><variable line="1333" name="index" /><variable citdl="pdeps[]" line="1274" name="group" /><variable citdl="pf.getDeps()" line="1212" name="pdeps" /><variable citdl="array()" line="1209" name="deplinks" /><variable citdl="node.getData()" line="1211" name="pf" /><variable citdl="deplinks[]" line="1324" name="parents" /><variable citdl="array()" line="1196" name="nodes" /><variable citdl="this.config.getRegistry()" line="1197" name="reg" /><variable citdl="nodes[]" line="1210" name="node" /><variable citdl="pdeps[]" line="1218" name="dep" /><variable line="1325" name="parent" /><variable line="1324" name="dependent" /><variable citdl="parents[]" line="1325" name="unused" /><variable citdl="reg.parsedPackageNameToString()" line="1203" name="pname" /><variable citdl="Structures_Graph" line="1195" name="depgraph" /><variable citdl="installOrder" line="1334" name="data" /><variable line="1332" name="count" /><variable citdl="packages[]" line="1198" name="package" /><variable citdl="reg.parsedPackageNameToString()" line="1228" name="dname" /><variable line="1198" name="i" /><variable citdl="array()" line="1261" name="t" /><variable citdl="installOrder[]" line="1333" name="sortedpackage" /></scope><scope doc="Detect recursive links between dependencies and break the cycles&#xA;&#xA;@param array&#xA;@access private" ilk="function" line="1353" lineend="1373" name="_detectDepCycle" signature="_detectDepCycle(&amp; $deplinks)"><variable ilk="argument" line="1353" name="deplinks" /><variable line="1357" name="dep" /><variable citdl="parents[]" line="1358" name="unused" /><variable citdl="boolean" line="1356" name="keepgoing" /><variable citdl="deplinks[]" line="1357" name="parents" /><variable line="1358" name="parent" /></scope><scope ilk="function" line="1375" lineend="1407" name="_testCycle" returns="boolean" signature="_testCycle($test, $deplinks, $dep)"><variable ilk="argument" line="1375" name="test" /><variable ilk="argument" line="1375" name="deplinks" /><variable ilk="argument" line="1375" name="dep" /><variable citdl="deplinks[]" line="1399" name="unused" /><variable citdl="array()" line="1379" name="visited" /><variable line="1399" name="parent" /></scope><variable attributes="static" citdl="array()" line="1377" name="visited" /><scope doc="&#xA;Set up the dependency for installation parsing&#xA;&lt;array&gt; $t  - dependency information&#xA;&lt;pear_registry&gt; $reg  - &#xA;&lt;array&gt; $deplinks  - list of dependency links already established&#xA;&lt;array&gt; $nodes  - all existing package nodes&#xA;&lt;string&gt; $package  - parent package name&#xA;Access private&#xA;" ilk="function" line="1419" lineend="1436" name="_setupGraph" signature="_setupGraph(array $t, PEAR_Registry $reg, array &amp; $deplinks, array &amp; $nodes, string $package)"><variable citdl="array" ilk="argument" line="1419" name="t" /><variable citdl="PEAR_Registry" ilk="argument" line="1419" name="reg" /><variable citdl="array" ilk="argument" line="1419" name="deplinks" /><variable citdl="array" ilk="argument" line="1419" name="nodes" /><variable citdl="string" ilk="argument" line="1419" name="package" /><variable citdl="t[]" line="1421" name="dep" /><variable citdl="reg.parsedPackageNameToString()" line="1427" name="dname" /><variable line="1422" name="depchannel" /></scope><scope ilk="function" line="1438" lineend="1441" name="_dependsOn" returns="this._checkDepTree()" signature="_dependsOn($a, $b)"><variable ilk="argument" line="1438" name="a" /><variable ilk="argument" line="1438" name="b" /></scope><scope ilk="function" line="1443" lineend="1464" name="_checkDepTree" returns="boolean" signature="_checkDepTree($channel, $package, $b, $checked = array())"><variable ilk="argument" line="1443" name="channel" /><variable ilk="argument" line="1443" name="package" /><variable ilk="argument" line="1443" name="b" /><variable default="array()" ilk="argument" line="1443" name="checked" /><variable line="1456" name="pa" /><variable line="1455" name="ch" /><variable citdl="packages[]" line="1456" name="true" /><variable citdl="this._depTree[]" line="1455" name="packages" /></scope><scope ilk="function" line="1466" lineend="1485" name="_sortInstall" returns="int" signature="_sortInstall($a, $b)"><variable ilk="argument" line="1466" name="a" /><variable ilk="argument" line="1466" name="b" /></scope><scope doc="&#xA;Download a file through HTTP.  Considers suggested file name in&#xA;Content-disposition: header and can run a callback function for&#xA;different events.  The callback will be called with two&#xA;parameters: the callback type, and parameters.  The implemented&#xA;callback types are:&#xA; &apos;setup&apos;       called at the very beginning, parameter is a UI object&#xA;               that should be used for all output&#xA; &apos;message&apos;     the parameter is a string with an informational message&#xA; &apos;saveas&apos;      may be used to save with a different file name, the&#xA;               parameter is the filename that is about to be used.&#xA;               If a &apos;saveas&apos; callback returns a non-empty string,&#xA;               that file name will be used as the filename instead.&#xA;               Note that $save_dir will not be affected by this, only&#xA;               the basename of the file.&#xA; &apos;start&apos;       download is starting, parameter is number of bytes&#xA;               that are expected, or -1 if unknown&#xA; &apos;bytesread&apos;   parameter is the number of bytes read so far&#xA; &apos;done&apos;        download is complete, parameter is the total number&#xA;               of bytes read&#xA; &apos;connfailed&apos;  if the TCP/SSL connection fails, this callback is called&#xA;               with array(host,port,errno,errmsg)&#xA; &apos;writefailed&apos; if writing to disk fails, this callback is called&#xA;               with array(destfile,errmsg)&#xA;If an HTTP proxy has been configured (http_proxy PEAR_Config&#xA;setting), the proxy will be used.&#xA;&lt;string&gt; $url  - the URL to download&#xA;&lt;object&gt; $ui  - PEAR_Frontend_* instance&#xA;&lt;object&gt; $config  - PEAR_Config instance&#xA;&lt;string&gt; $save_dir  - directory to save file in&#xA;&lt;mixed&gt; $callback  - function/method to call for status&#xA;                          updates&#xA;&lt;false|string|array&gt; $lastmodified  - header values to check against for caching&#xA;                          use false to return the header values from this download&#xA;&lt;false|array&gt; $accept  - Accept headers to send&#xA;&lt;false|string&gt; $channel  - Channel to use for retrieving authentication&#xA;Returns string|array  - Returns the full path of the downloaded file or a PEAR&#xA;                      error on failure.  If the error is caused by&#xA;                      socket-related errors, the error object will&#xA;                      have the fsockopen error code available through&#xA;                      getCode().  If caching is requested, then return the header&#xA;                      values.&#xA;Access public&#xA;" ilk="function" line="1535" lineend="1765" name="downloadHttp" returns="string" signature="string downloadHttp(string $url, object &amp; $ui, string $save_dir = &apos;.&apos;, mixed $callback = null, $lastmodified = null, $accept = false, $channel = false, object $config)"><variable citdl="string" ilk="argument" line="1535" name="url" /><variable citdl="object" ilk="argument" line="1535" name="ui" /><variable citdl="string" default="&apos;.&apos;" ilk="argument" line="1535" name="save_dir" /><variable citdl="mixed" default="null" ilk="argument" line="1535" name="callback" /><variable default="null" ilk="argument" line="1535" name="lastmodified" /><variable default="false" ilk="argument" line="1535" name="accept" /><variable default="false" ilk="argument" line="1535" name="channel" /><variable citdl="object" ilk="argument" line="1535" name="config" /><variable line="1588" name="fp" /><variable citdl="int" line="1725" name="bytes" /><variable citdl="save_dir" line="1710" name="dest_file" /><variable line="1556" name="port" /><variable citdl="int" line="1541" name="redirect" /><variable citdl="basename()" line="1698" name="save_as" /><variable citdl="proxy_port" line="1565" name="proxy_host" /><variable line="1588" name="errno" /><variable line="1574" name="proxy_pass" /><variable attributes="__not_yet_defined__" line="1670" name="matches" /><variable citdl="int" line="1666" name="reply" /><variable citdl="host" line="1605" name="network_host" /><variable citdl="config.get()" line="1645" name="username" /><variable citdl="base64_encode()" line="1648" name="tmp" /><variable citdl="redirect" line="1540" name="wasredirect" /><variable line="1572" name="proxy_port" /><variable line="1555" name="host" /><variable line="1557" name="path" /><variable line="1667" name="line" /><variable citdl="config.get()" line="1646" name="password" /><variable line="1730" name="data" /><variable citdl="string" line="1628" name="ifmodifiedsince" /><variable citdl="parse_url()" line="1546" name="info" /><variable line="1585" name="scheme" /><variable line="1573" name="proxy_user" /><variable citdl="string" line="1598" name="request" /><variable citdl="array()" line="1665" name="headers" /><variable line="1723" name="length" /></scope><variable attributes="static" citdl="int" line="1538" name="redirect" /></scope></scope>