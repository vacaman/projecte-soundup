<scope ilk="blob" lang="PHP" name="DependencyDB.php" src="/usr/share/php/PEAR/DependencyDB.php"><import line="21" module="PEAR.php" /><import line="22" module="PEAR/Config.php" /><scope doc="Track dependency relationships between installed packages&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@author     Tomas V.V.Cox &lt;cox@idec.net.com&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.9.4&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a1" ilk="class" line="37" lineend="769" name="PEAR_DependencyDB"><variable citdl="PEAR_Config" doc="This is initialized by {@link setConfig()}&#xA;@var PEAR_Config&#xA;@access private" line="46" name="_config" /><variable citdl="PEAR_Registry" doc="This is initialized by {@link setConfig()}&#xA;@var PEAR_Registry&#xA;@access private" line="52" name="_registry" /><variable citdl="string" doc="Filename of the dependency DB (usually .depdb)&#xA;@var string&#xA;@access private" line="58" name="_depdb" /><variable citdl="string" doc="File name of the lockfile (usually .depdblock)&#xA;@var string&#xA;@access private" line="64" name="_lockfile" /><variable citdl="resource" doc="Open file resource for locking the lockfile&#xA;@var resource|false&#xA;@access private" line="70" name="_lockFp" /><variable citdl="string" doc="API version of this class, used to validate a file on-disk&#xA;@var string&#xA;@access private" line="76" name="_version" /><variable citdl="array" doc="Cached dependency database file&#xA;@var array|null&#xA;@access private" line="82" name="_cache" /><scope doc="Get a raw dependency database.  Calls setConfig() and assertDepsDB()&#xA;@param PEAR_Config&#xA;@param string|false full path to the dependency database, or false to use default&#xA;@return PEAR_DependencyDB|PEAR_Error&#xA;@static" ilk="function" line="94" lineend="108" name="singleton" returns="PEAR_DependencyDB" signature="pear_dependencydb &amp;singleton(&amp; $config, $depdb = false)"><variable ilk="argument" line="94" name="config" /><variable default="false" ilk="argument" line="94" name="depdb" /><variable citdl="PEAR_DependencyDB" line="98" name="a" /><variable citdl="config.get()" line="96" name="phpdir" /><variable citdl="a.assertDepsDB()" line="101" name="e" /></scope><scope doc="Set up the registry/location of dependency DB&#xA;@param PEAR_Config|false&#xA;@param string|false full path to the dependency database, or false to use default" ilk="function" line="115" lineend="132" name="setConfig" signature="setConfig(&amp; $config, $depdb = false)"><variable ilk="argument" line="115" name="config" /><variable default="false" ilk="argument" line="115" name="depdb" /></scope><scope doc="&#xA;}}}&#xA;" ilk="function" line="135" lineend="154" name="hasWriteAccess" returns="boolean" signature="hasWriteAccess()"><variable citdl="this._depdb" line="138" name="dir" /></scope><scope doc="&#xA;Create the dependency database, if it doesn&apos;t exist.  Error if the database is&#xA;newer than the code reading it.&#xA;Returns void|pear_error &#xA;" ilk="function" line="163" lineend="181" name="assertDepsDB" signature="void assertDepsDB()"><variable citdl="this._getDepDB()" line="170" name="depdb" /></scope><scope doc="Get a list of installed packages that depend on this package&#xA;@param PEAR_PackageFile_v1|PEAR_PackageFile_v2|array&#xA;@return array|false" ilk="function" line="188" lineend="204" name="getDependentPackages" returns="array" signature="array getDependentPackages(&amp; $pkg)"><variable ilk="argument" line="188" name="pkg" /><variable citdl="this._getDepDB()" line="190" name="data" /><variable citdl="strtolower()" line="192" name="channel" /><variable citdl="strtolower()" line="193" name="package" /></scope><scope doc="Get a list of the actual dependencies of installed packages that depend on&#xA;a package.&#xA;@param PEAR_PackageFile_v1|PEAR_PackageFile_v2|array&#xA;@return array|false" ilk="function" line="212" lineend="250" name="getDependentPackageDependencies" returns="array" signature="array getDependentPackageDependencies(&amp; $pkg)"><variable ilk="argument" line="212" name="pkg" /><variable citdl="depend[]" line="229" name="info" /><variable citdl="this.getDependentPackages()" line="223" name="depend" /><variable citdl="this.getDependencies()" line="230" name="temp" /><variable citdl="strtolower()" line="217" name="package" /><variable citdl="temp[]" line="231" name="dep" /><variable citdl="array()" line="228" name="dependencies" /><variable citdl="this._getDepDB()" line="214" name="data" /><variable citdl="strtolower()" line="216" name="channel" /></scope><scope doc="Get a list of dependencies of this installed package&#xA;@param PEAR_PackageFile_v1|PEAR_PackageFile_v2|array&#xA;@return array|false" ilk="function" line="257" lineend="273" name="getDependencies" returns="array" signature="array getDependencies(&amp; $pkg)"><variable ilk="argument" line="257" name="pkg" /><variable citdl="this._getDepDB()" line="267" name="data" /><variable citdl="strtolower()" line="260" name="channel" /><variable citdl="strtolower()" line="261" name="package" /></scope><scope doc="Determine whether $parent depends on $child, near or deep&#xA;@param array|PEAR_PackageFile_v2|PEAR_PackageFile_v2&#xA;@param array|PEAR_PackageFile_v2|PEAR_PackageFile_v2" ilk="function" line="280" lineend="285" name="dependsOn" returns="this._dependsOn()" signature="dependsOn($parent, $child)"><variable ilk="argument" line="280" name="parent" /><variable ilk="argument" line="280" name="child" /><variable citdl="array()" line="282" name="c" /></scope><scope ilk="function" line="287" lineend="351" name="_dependsOn" returns="boolean" signature="_dependsOn($parent, $child, &amp; $checked)"><variable ilk="argument" line="287" name="parent" /><variable ilk="argument" line="287" name="child" /><variable ilk="argument" line="287" name="checked" /><variable citdl="this._cache[]" line="314" name="info" /><variable citdl="strtolower()" line="298" name="depchannel" /><variable citdl="strtolower()" line="299" name="deppackage" /><variable citdl="strtolower()" line="290" name="channel" /><variable citdl="strtolower()" line="291" name="package" /></scope><scope doc="Register dependencies of a package that is being installed or upgraded&#xA;@param PEAR_PackageFile_v2|PEAR_PackageFile_v2" ilk="function" line="357" lineend="363" name="installPackage" signature="installPackage(&amp; $package)"><variable ilk="argument" line="357" name="package" /><variable citdl="this._getDepDB()" line="359" name="data" /></scope><scope doc="&#xA;Remove dependencies of a package that is being uninstalled, or upgraded.&#xA;Upgraded packages first uninstall, then install&#xA;&lt;pear_packagefile_v1|pear_packagefile_v2|array&gt; If  - an array, then it must have&#xA;       indices &apos;channel&apos; and &apos;package&apos;&#xA;" ilk="function" line="372" lineend="429" name="uninstallPackage" returns="boolean" signature="uninstallPackage(&amp; $pkg)"><variable ilk="argument" line="372" name="pkg" /><variable citdl="data[]" line="393" name="info" /><variable line="390" name="depchannel" /><variable citdl="strtolower()" line="378" name="package" /><variable citdl="data[]" line="388" name="dep" /><variable line="393" name="i" /><variable citdl="strtolower()" line="391" name="depname" /><variable citdl="boolean" line="389" name="found" /><variable citdl="this._getDepDB()" line="374" name="data" /><variable citdl="strtolower()" line="377" name="channel" /></scope><scope doc="&#xA;Rebuild the dependency DB by reading registry entries.&#xA;Returns true|pear_error &#xA;" ilk="function" line="435" lineend="465" name="rebuildDB" returns="true" signature="true rebuildDB()"><variable citdl="packages[]" line="448" name="ps" /><variable citdl="ps[]" line="449" name="package" /><variable citdl="array()" line="437" name="depdb" /><variable citdl="this._writeDepDB()" line="458" name="error" /><variable citdl="this._registry.listAllPackages()" line="443" name="packages" /><variable line="448" name="channel" /></scope><scope doc="&#xA;Register usage of the dependency DB to prevent race conditions&#xA;&lt;int&gt; one  - of the LOCK_* constants&#xA;Returns true|pear_error &#xA;Access private&#xA;" ilk="function" line="473" lineend="517" name="_lock" returns="true" signature="true _lock($mode = LOCK_EX)"><variable default="LOCK_EX" ilk="argument" line="473" name="mode" /><variable citdl="string" line="507" name="str" /><variable citdl="string" line="484" name="open_mode" /></scope><scope doc="&#xA;Release usage of dependency DB&#xA;Returns true|pear_error &#xA;Access private&#xA;" ilk="function" line="524" lineend="532" name="_unlock" returns="true" signature="true _unlock()"><variable citdl="this._lock()" line="526" name="ret" /></scope><scope doc="&#xA;Load the dependency database from disk, or return the cache&#xA;Returns array|pear_error &#xA;" ilk="function" line="538" lineend="561" name="_getDepDB" returns="array" signature="array _getDepDB()"><variable citdl="get_magic_quotes_runtime()" line="553" name="rt" /><variable citdl="unserialize()" line="557" name="data" /><variable citdl="PEAR.raiseError()" line="549" name="err" /></scope><scope doc="&#xA;Write out the dependency database to disk&#xA;&lt;array&gt; the  - database&#xA;Returns true|pear_error &#xA;Access private&#xA;" ilk="function" line="569" lineend="588" name="_writeDepDB" returns="true" signature="true _writeDepDB(&amp; $deps)"><variable ilk="argument" line="569" name="deps" /><variable citdl="get_magic_quotes_runtime()" line="580" name="rt" /></scope><scope doc="Register all dependencies from a package in the dependencies database, in essence&#xA;&quot;installing&quot; the package&apos;s dependency information&#xA;@param array the database&#xA;@param PEAR_PackageFile_v1|PEAR_PackageFile_v2&#xA;@access private" ilk="function" line="597" lineend="703" name="_setPackageDeps" signature="_setPackageDeps(&amp; $data, &amp; $pkg)"><variable ilk="argument" line="597" name="data" /><variable ilk="argument" line="597" name="pkg" /><variable citdl="deps[]" line="672" name="group" /><variable citdl="strtolower()" line="620" name="package" /><variable citdl="deps[]" line="632" name="dep" /><variable citdl="gen.dependenciesToV2()" line="602" name="deps" /><variable citdl="pkg.getDefaultGenerator()" line="601" name="gen" /><variable citdl="strtolower()" line="619" name="channel" /></scope><scope doc="@param array the database&#xA;@param PEAR_PackageFile_v1|PEAR_PackageFile_v2&#xA;@param array the specific dependency&#xA;@param required|optional whether this is a required or an optional dep&#xA;@param string|false dependency group this dependency is from, or false for ordinary dep" ilk="function" line="712" lineend="768" name="_registerDep" signature="_registerDep(&amp; $data, &amp; $pkg, $dep, $type, $group = false)"><variable ilk="argument" line="712" name="data" /><variable ilk="argument" line="712" name="pkg" /><variable ilk="argument" line="712" name="dep" /><variable ilk="argument" line="712" name="type" /><variable default="false" ilk="argument" line="712" name="group" /><variable citdl="array()" line="718" name="info" /><variable line="721" name="depchannel" /><variable citdl="strtolower()" line="727" name="package" /><variable line="740" name="i" /><variable citdl="data[]" line="740" name="p" /><variable citdl="boolean" line="739" name="found" /><variable citdl="strtolower()" line="726" name="channel" /></scope></scope></scope>