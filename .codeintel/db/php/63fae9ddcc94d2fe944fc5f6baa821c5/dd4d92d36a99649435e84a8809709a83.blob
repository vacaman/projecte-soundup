<scope ilk="blob" lang="PHP" name="TopologicalSorter.php" src="/usr/share/php/Structures/Graph/Manipulator/TopologicalSorter.php"><import line="35" module="PEAR.php" /><import line="37" module="Structures/Graph.php" /><import line="39" module="Structures/Graph/Node.php" /><import line="41" module="Structures/Graph/Manipulator/AcyclicTest.php" /><scope doc="The Structures_Graph_Manipulator_TopologicalSorter is a manipulator &#xA;which is able to return the set of nodes in a graph, sorted by topological &#xA;order.&#xA;&#xA;A graph may only be sorted topologically iff it's a DAG. You can test it&#xA;with the Structures_Graph_Manipulator_AcyclicTest.&#xA;&#xA;@author		S&#233;rgio Carvalho &lt;sergio.carvalho@portugalmail.com&gt; &#xA;@copyright	(c) 2004 by S&#233;rgio Carvalho&#xA;@see     Structures_Graph_Manipulator_AcyclicTest&#xA;@package Structures_Graph" ilk="class" line="58" lineend="151" name="Structures_Graph_Manipulator_TopologicalSorter"><scope doc="&#xA;This is a variant of Structures_Graph::inDegree which does &#xA;not count nodes marked as visited.&#xA;Access   private&#xA;Returns integer  - Number of non-visited nodes that link to this one&#xA;" ilk="function" line="68" lineend="76" name="_nonVisitedInDegree" returns="integer" signature="integer _nonVisitedInDegree(&amp; $node)"><variable ilk="argument" line="68" name="node" /><variable citdl="node._graph.getNodes()" line="70" name="graphNodes" /><variable citdl="int" line="69" name="result" /><variable citdl="array_keys()[]" line="71" name="key" /></scope><scope doc="&#xA;Access   private&#xA;" ilk="function" line="83" lineend="116" name="_sort" signature="_sort(&amp; $graph)"><variable ilk="argument" line="83" name="graph" /><variable citdl="array_keys()" line="86" name="nodeKeys" /><variable citdl="array()" line="87" name="refGenerator" /><variable citdl="nodeKeys[]" line="88" name="key" /><variable citdl="int" line="105" name="i" /><variable citdl="array()" line="97" name="leafNodes" /><variable citdl="leafNodes" line="106" name="visited" /><variable citdl="graph.getNodes()" line="85" name="nodes" /><variable citdl="int" line="94" name="topologicalLevel" /></scope><scope doc="&#xA;sort returns the graph&apos;s nodes, sorted by topological order. &#xA;The result is an array with &#xA;as many entries as topological levels. Each entry in this array is an array of nodes within&#xA;the given topological level.&#xA;Returns array  - The graph&apos;s nodes, sorted by topological order.&#xA;Access	public&#xA;" ilk="function" line="131" lineend="149" name="sort" returns="array" signature="array sort(&amp; $graph)"><variable ilk="argument" line="131" name="graph" /><variable citdl="array_keys()" line="141" name="nodeKeys" /><variable citdl="graph.getNodes()" line="140" name="nodes" /><variable citdl="array()" line="137" name="result" /><variable citdl="nodeKeys[]" line="142" name="key" /></scope></scope></scope>