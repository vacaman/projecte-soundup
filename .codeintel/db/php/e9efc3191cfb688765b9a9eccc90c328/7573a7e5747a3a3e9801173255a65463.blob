<scope ilk="blob" lang="PHP" name="Package.php" src="/usr/share/php/PEAR/Downloader/Package.php"><import line="738" module="PEAR/Dependency2.php" /><import line="1117" module="PEAR/Dependency2.php" /><import line="1578" module="Archive/Tar.php" /><import line="1836" module="PEAR/Common.php" /><import line="1852" module="PEAR/Dependency2.php" /><import line="1903" module="PEAR/Common.php" /><import line="1919" module="PEAR/Dependency2.php" /><variable ilk="constant" line="21" name="PEAR_DOWNLOADER_PACKAGE_STATE" /><variable ilk="constant" line="26" name="PEAR_DOWNLOADER_PACKAGE_PHPVERSION" /><scope doc="Coordinates download parameters and manages their dependencies&#xA;prior to downloading them.&#xA;&#xA;Input can come from three sources:&#xA;&#xA;- local files (archives or package.xml)&#xA;- remote files (downloadable urls)&#xA;- abstract package names&#xA;&#xA;The first two elements are handled cleanly by PEAR_PackageFile, but the third requires&#xA;accessing pearweb&apos;s xml-rpc interface to determine necessary dependencies, and the&#xA;format returned of dependencies is slightly different from that used in package.xml.&#xA;&#xA;This class hides the differences between these elements, and makes automatic&#xA;dependency resolution a piece of cake.  It also manages conflicts when&#xA;two classes depend on incompatible dependencies, or differing versions of the same&#xA;package dependency.  In addition, download will not be attempted if the php version is&#xA;not supported, PEAR installer version is not supported, or non-PECL extensions are not&#xA;installed.&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.9.4&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a1" ilk="class" line="57" lineend="1988" name="PEAR_Downloader_Package"><variable citdl="PEAR_Downloader" doc="@var PEAR_Downloader" line="62" name="_downloader" /><variable citdl="PEAR_Config" doc="@var PEAR_Config" line="66" name="_config" /><variable citdl="PEAR_Registry" doc="@var PEAR_Registry" line="70" name="_registry" /><variable citdl="PEAR_Registry" doc="Used to implement packagingroot properly&#xA;@var PEAR_Registry" line="75" name="_installRegistry" /><variable citdl="PEAR_PackageFile_v1" doc="@var PEAR_PackageFile_v1|PEAR_PackageFile|v2" line="79" name="_packagefile" /><variable citdl="array" doc="@var array" line="83" name="_parsedname" /><variable citdl="array" doc="@var array" line="87" name="_downloadURL" /><variable citdl="array" doc="@var array" line="91" name="_downloadDeps" /><variable citdl="boolean" doc="@var boolean" line="95" name="_valid" /><variable citdl="boolean" doc="@var boolean" line="99" name="_analyzed" /><variable citdl="string" doc="if this or a parent package was invoked with Package-state, this is set to the&#xA;state variable.&#xA;&#xA;This allows temporary reassignment of preferred_state for a parent package and all of&#xA;its dependencies.&#xA;@var string|false" line="108" name="_explicitState" /><variable citdl="boolean" line="112" name="_explicitGroup" /><variable citdl="string" doc="Package type local|url&#xA;@var string" line="117" name="_type" /><variable citdl="string" doc="Contents of package.xml, if downloaded from a remote channel&#xA;@var string|false&#xA;@access private" line="123" name="_rawpackagefile" /><variable citdl="boolean" doc="@var boolean&#xA;@access private" line="128" name="_validated" /><scope attributes="__ctor__" doc="@param PEAR_Downloader" ilk="function" line="133" lineend="147" name="PEAR_Downloader_Package" signature="PEAR_Downloader_Package(&amp; $downloader)"><variable ilk="argument" line="133" name="downloader" /><variable citdl="downloader.getOptions()" line="138" name="options" /></scope><scope doc="Parse the input and determine whether this is a local file, a remote uri, or an&#xA;abstract package name.&#xA;&#xA;This is the heart of the PEAR_Downloader_Package(), and is used in&#xA;{@link PEAR_Downloader::download()}&#xA;@param string&#xA;@return bool|PEAR_Error" ilk="function" line="158" lineend="243" name="initialize" returns="bool" signature="bool initialize($param)"><variable ilk="argument" line="158" name="param" /><variable citdl="origErr.getUserInfo()[]" line="168" name="userInfo" /><variable citdl="this._downloader.getOptions()" line="165" name="options" /><variable citdl="this._fromUrl()" line="180" name="err" /><variable citdl="this._fromFile()" line="160" name="origErr" /></scope><scope doc="&#xA;Retrieve any non-local packages&#xA;Returns pear_packagefile_v1|pear_packagefile_v2|pear_error &#xA;" ilk="function" line="249" lineend="300" name="download" returns="PEAR_PackageFile_v1" signature="pear_packagefile_v1 &amp;download()"><variable citdl="this.getParsedPackage()" line="257" name="info" /><variable line="258" name="i" /><variable citdl="this.getParsedPackage()" line="264" name="newinfo" /><variable citdl="this._fromUrl()" line="263" name="err" /><variable citdl="info[]" line="258" name="p" /></scope><variable citdl="boolean" line="256" name="_isvalid" /><scope ilk="function" line="302" lineend="305" name="getPackageFile" returns="this._packagefile" signature="&amp;getPackageFile()" /><scope ilk="function" line="307" lineend="310" name="getDownloader" returns="this._downloader" signature="&amp;getDownloader()" /><scope ilk="function" line="312" lineend="315" name="getType" returns="this._type" signature="getType()" /><scope doc="&#xA;Like {@link initialize()}, but operates on a dependency&#xA;" ilk="function" line="320" lineend="356" name="fromDepURL" returns="PEAR.raiseError()" signature="fromDepURL($dep)"><variable ilk="argument" line="320" name="dep" /><variable citdl="string" line="326" name="ext" /><variable citdl="this._downloader.getOptions()" line="324" name="options" /><variable citdl="this._fromUrl()" line="332" name="err" /></scope><scope ilk="function" line="358" lineend="385" name="detectDependencies" returns="this._detect2()" signature="detectDependencies($params)"><variable ilk="argument" line="358" name="params" /><variable citdl="this.getParsedPackage()" line="370" name="pname" /><variable citdl="this._downloader.getOptions()" line="360" name="options" /><variable citdl="this.getDeps()" line="375" name="deps" /></scope><scope ilk="function" line="387" lineend="390" name="setValidated" signature="setValidated()" /><scope ilk="function" line="392" lineend="395" name="alreadyValidated" returns="this._validated" signature="alreadyValidated()" /><scope doc="&#xA;Remove packages to be downloaded that are already installed&#xA;&lt;array&gt; of  - PEAR_Downloader_Package objects&#xA;Static&#xA;" ilk="function" line="402" lineend="442" name="removeInstalled" signature="removeInstalled(&amp; $params)"><variable ilk="argument" line="402" name="params" /><variable citdl="param.getParsedPackage()" line="419" name="info" /><variable citdl="param.getPackage()" line="411" name="package" /><variable line="410" name="i" /><variable citdl="params[]" line="410" name="param" /><variable citdl="param._installRegistry.packageInfo()" line="416" name="packageVersion" /><variable citdl="params" line="408" name="options" /><variable citdl="param.getChannel()" line="412" name="channel" /></scope><scope ilk="function" line="444" lineend="607" name="_detect2" signature="_detect2($deps, $pname, $options, $params)"><variable ilk="argument" line="444" name="deps" /><variable ilk="argument" line="444" name="pname" /><variable ilk="argument" line="444" name="options" /><variable ilk="argument" line="444" name="params" /><variable citdl="deps" line="549" name="group" /><variable citdl="boolean" line="447" name="groupnotfound" /><variable citdl="deps[]" line="452" name="dep" /><variable citdl="boolean" line="486" name="skip" /><variable citdl="this._explicitGroup" line="533" name="explicit" /><variable citdl="this._detect2Dep()" line="457" name="ret" /><variable citdl="this.getGroup()" line="532" name="groupname" /><variable citdl="array()[]" line="448" name="packagetype" /><variable citdl="boolean" line="561" name="found" /><variable citdl="array()" line="480" name="skipnames" /></scope><scope ilk="function" line="609" lineend="686" name="_detect2Dep" returns="boolean" signature="_detect2Dep($dep, $pname, $group, $params)"><variable ilk="argument" line="609" name="dep" /><variable ilk="argument" line="609" name="pname" /><variable ilk="argument" line="609" name="group" /><variable ilk="argument" line="609" name="params" /><variable citdl="string" line="659" name="oper" /><variable citdl="dep" line="620" name="testdep" /><variable citdl="this._analyzeDownloadURL()" line="647" name="ret" /><variable citdl="this._downloader._getDepPackageDownloadUrl()" line="639" name="url" /><variable citdl="this._installRegistry.packageInfo()" line="668" name="version" /><variable citdl="this._downloader.getOptions()" line="615" name="options" /></scope><scope ilk="function" line="688" lineend="884" name="_detect1" returns="url" signature="_detect1($deps, $pname, $options, $params)"><variable ilk="argument" line="688" name="deps" /><variable ilk="argument" line="688" name="pname" /><variable ilk="argument" line="688" name="options" /><variable ilk="argument" line="688" name="params" /><variable citdl="PEAR_PackageFile_v1" line="714" name="fakedp" /><variable citdl="boolean" line="693" name="nodownload" /><variable line="706" name="group" /><variable citdl="PEAR_Dependency2.normalizeDep()" line="741" name="newdep" /><variable citdl="deps[]" line="692" name="dep" /><variable citdl="count()" line="761" name="skip" /><variable citdl="string" line="733" name="chan" /><variable citdl="this._analyzeDownloadURL()" line="864" name="ret" /><variable citdl="this._downloader._getDepPackageDownloadUrl()" line="732" name="url" /><variable citdl="this._installRegistry.packageInfo()" line="829" name="version" /><variable citdl="this._installRegistry.getPackage()" line="746" name="obj" /><variable citdl="array()" line="691" name="skipnames" /></scope><scope ilk="function" line="886" lineend="889" name="setDownloadURL" signature="setDownloadURL($pkg)"><variable ilk="argument" line="886" name="pkg" /></scope><scope doc="&#xA;Set the package.xml object for this downloaded package&#xA;&lt;pear_packagefile_v1|pear_packagefile_v2&gt; $pkg  - &#xA;" ilk="function" line="896" lineend="899" name="setPackageFile" signature="setPackageFile(&amp; $pkg)"><variable ilk="argument" line="896" name="pkg" /></scope><scope ilk="function" line="901" lineend="905" name="getShortName" returns="this._registry.parsedPackageNameToString()" signature="getShortName()" /><scope ilk="function" line="907" lineend="916" name="getParsedPackage" returns="array()" signature="getParsedPackage()" /><scope ilk="function" line="918" lineend="921" name="getDownloadURL" returns="this._downloadURL" signature="getDownloadURL()" /><scope ilk="function" line="923" lineend="930" name="canDefault" returns="boolean" signature="canDefault()" /><scope ilk="function" line="932" lineend="941" name="getPackage" returns="this._packagefile.getPackage()" signature="getPackage()" /><scope doc="@param PEAR_PackageFile_v1|PEAR_PackageFile_v2" ilk="function" line="946" lineend="955" name="isSubpackage" returns="this._packagefile.isSubpackage()" signature="isSubpackage(&amp; $pf)"><variable ilk="argument" line="946" name="pf" /></scope><scope ilk="function" line="957" lineend="966" name="getPackageType" returns="this._packagefile.getPackageType()" signature="getPackageType()" /><scope ilk="function" line="968" lineend="975" name="isBundle" returns="this._packagefile.getPackageType()" signature="isBundle()" /><scope ilk="function" line="977" lineend="986" name="getPackageXmlVersion" returns="this._packagefile.getPackagexmlVersion()" signature="getPackageXmlVersion()" /><scope ilk="function" line="988" lineend="997" name="getChannel" returns="this._packagefile.getChannel()" signature="getChannel()" /><scope ilk="function" line="999" lineend="1008" name="getURI" returns="this._packagefile.getURI()" signature="getURI()" /><scope ilk="function" line="1010" lineend="1019" name="getVersion" returns="this._packagefile.getVersion()" signature="getVersion()" /><scope ilk="function" line="1021" lineend="1030" name="isCompatible" returns="this._packagefile.isCompatible()" signature="isCompatible($pf)"><variable ilk="argument" line="1021" name="pf" /></scope><scope ilk="function" line="1032" lineend="1035" name="setGroup" signature="setGroup($group)"><variable ilk="argument" line="1032" name="group" /></scope><scope ilk="function" line="1037" lineend="1044" name="getGroup" returns="this._parsedname" signature="getGroup()" /><scope ilk="function" line="1046" lineend="1059" name="isExtension" returns="this._packagefile.isExtension()" signature="isExtension($name)"><variable ilk="argument" line="1046" name="name" /></scope><scope ilk="function" line="1061" lineend="1080" name="getDeps" returns="this._packagefile.getDeps()" signature="getDeps()"><variable citdl="this._packagefile.getPackagexmlVersion()" line="1064" name="ver" /></scope><scope doc="&#xA;&lt;array&gt; Parsed  - array from {@link PEAR_Registry::parsePackageName()} or a dependency&#xA;                    returned from getDepDownloadURL()&#xA;" ilk="function" line="1086" lineend="1170" name="isEqual" returns="boolean" signature="isEqual($param)"><variable ilk="argument" line="1086" name="param" /><variable citdl="PEAR_Dependency2.normalizeDep()" line="1120" name="newdep" /><variable citdl="string" line="1089" name="channel" /><variable citdl="param.getPackage()" line="1090" name="package" /></scope><scope ilk="function" line="1172" lineend="1233" name="isInstalled" returns="boolean" signature="isInstalled($dep, $oper = &apos;==&apos;)"><variable ilk="argument" line="1172" name="dep" /><variable default="&apos;==&apos;" ilk="argument" line="1172" name="oper" /><variable citdl="this._installRegistry.packageExists()" line="1206" name="test" /><variable citdl="this._installRegistry.packageInfo()" line="1221" name="packageVersion" /><variable citdl="this._downloader.getOptions()" line="1205" name="options" /><variable citdl="string" line="1184" name="channel" /><variable citdl="dep" line="1183" name="package" /></scope><scope doc="&#xA;Detect duplicate package names with differing versions&#xA;If a user requests to install Date 1.4.6 and Date 1.4.7,&#xA;for instance, this is a logic error.  This method&#xA;detects this situation.&#xA;&lt;array&gt; $params  - array of PEAR_Downloader_Package objects&#xA;&lt;array&gt; $errorparams  - empty array&#xA;Returns array  - array of stupid duplicated packages in PEAR_Downloader_Package obejcts&#xA;" ilk="function" line="1246" lineend="1279" name="detectStupidDuplicates" returns="array" signature="array detectStupidDuplicates(array $params, array &amp; $errorparams)"><variable citdl="array" ilk="argument" line="1246" name="params" /><variable citdl="array" ilk="argument" line="1246" name="errorparams" /><variable citdl="indices[]" line="1274" name="index" /><variable citdl="param.getGroup()" line="1252" name="group" /><variable citdl="param.getPackage()" line="1250" name="package" /><variable line="1249" name="i" /><variable citdl="groups[]" line="1266" name="dupes" /><variable citdl="params[]" line="1249" name="param" /><variable citdl="array()" line="1248" name="existing" /><variable citdl="existing[]" line="1265" name="groups" /><variable citdl="array()" line="1264" name="indices" /><variable citdl="param.getChannel()" line="1251" name="channel" /></scope><scope doc="@param array&#xA;@param bool ignore install groups - for final removal of dupe packages&#xA;@static" ilk="function" line="1286" lineend="1335" name="removeDuplicates" signature="removeDuplicates(&amp; $params, $ignoreGroups = false)"><variable ilk="argument" line="1286" name="params" /><variable default="false" ilk="argument" line="1286" name="ignoreGroups" /><variable citdl="array_flip()" line="1303" name="testp" /><variable citdl="ignoreGroups" line="1295" name="group" /><variable citdl="array()" line="1288" name="pnames" /><variable citdl="unset[]" line="1289" name="i" /><variable citdl="params[]" line="1289" name="param" /><variable citdl="array()" line="1326" name="ret" /><variable citdl="array_diff()" line="1302" name="unset" /></scope><scope ilk="function" line="1337" lineend="1340" name="explicitState" returns="this._explicitState" signature="explicitState()" /><scope ilk="function" line="1342" lineend="1345" name="setExplicitState" signature="setExplicitState($s)"><variable ilk="argument" line="1342" name="s" /></scope><scope doc="&#xA;Static&#xA;" ilk="function" line="1350" lineend="1475" name="mergeDependencies" returns="dir" signature="mergeDependencies(&amp; $params)"><variable ilk="argument" line="1350" name="params" /><variable line="1374" name="fp" /><variable citdl="param._downloadDeps[]" line="1425" name="dep" /><variable citdl="param.getDownloader()" line="1368" name="dl" /><variable citdl="PEAR_Downloader_Package" line="1387" name="obj" /><variable citdl="array()" line="1420" name="newparams" /><variable citdl="array_merge()" line="1426" name="merge" /><variable citdl="bundles[]" line="1353" name="i" /><variable citdl="obj" line="1403" name="j" /><variable citdl="newparams" line="1352" name="bundles" /><variable citdl="params[]" line="1353" name="param" /><variable citdl="newparams[]" line="1417" name="unused" /><variable citdl="pf.getFileContents()" line="1367" name="filecontents" /><variable citdl="param.getPackageFile()" line="1359" name="pf" /><variable citdl="contents[]" line="1366" name="file" /><variable citdl="array()" line="1360" name="newdeps" /><variable citdl="obj._fromFile()" line="1394" name="e" /><variable citdl="dl.getOptions()" line="1369" name="options" /><variable citdl="pf.getBundledPackages()" line="1361" name="contents" /></scope><scope doc="&#xA;Static&#xA;" ilk="function" line="1481" lineend="1494" name="willDownload" returns="boolean" signature="willDownload($param, $params)"><variable ilk="argument" line="1481" name="param" /><variable ilk="argument" line="1481" name="params" /><variable citdl="params[]" line="1487" name="obj" /></scope><scope doc="For simpler unit-testing&#xA;@param PEAR_Config&#xA;@param int&#xA;@param string" ilk="function" line="1502" lineend="1506" name="getPackagefileObject" returns="a" signature="&amp;getPackagefileObject(&amp; $c, $d)"><variable ilk="argument" line="1502" name="c" /><variable ilk="argument" line="1502" name="d" /><variable citdl="PEAR_PackageFile" line="1504" name="a" /></scope><scope doc="&#xA;This will retrieve from a local file if possible, and parse out&#xA;a group name as well.  The original parameter will be modified to reflect this.&#xA;&lt;string|array&gt; can  - be a parsed package name as well&#xA;Access private&#xA;" ilk="function" line="1514" lineend="1549" name="_fromFile" returns="pf" signature="_fromFile(&amp; $param)"><variable ilk="argument" line="1514" name="param" /><variable citdl="array_pop()" line="1520" name="group" /><variable citdl="param" line="1516" name="saveparam" /><variable citdl="pkg.fromAnyFile()" line="1533" name="pf" /><variable citdl="this.getPackagefileObject()" line="1531" name="pkg" /><variable citdl="explode()" line="1519" name="test" /><variable citdl="this._downloader.getOptions()" line="1530" name="options" /></scope><scope ilk="function" line="1551" lineend="1639" name="_fromUrl" returns="dir" signature="_fromUrl($param, $saveparam = &apos;&apos;)"><variable ilk="argument" line="1551" name="param" /><variable default="&apos;&apos;" ilk="argument" line="1551" name="saveparam" /><variable citdl="Archive_Tar" line="1579" name="tar" /><variable citdl="PEAR.raiseError()" line="1573" name="err" /><variable citdl="tar.extractInString()" line="1580" name="packagexml" /><variable citdl="this._downloader.ui" line="1557" name="callback" /><variable citdl="pkg.fromAnyFile()" line="1606" name="pf" /><variable citdl="this.getPackagefileObject()" line="1603" name="pkg" /><variable citdl="this._downloader.downloadHttp()" line="1566" name="file" /><variable citdl="this._downloader.getOptions()" line="1554" name="options" /><variable citdl="saveparam" line="1627" name="out" /></scope><scope doc="&#xA;&lt;string|array&gt; pass  - in an array of format&#xA;                    array(&#xA;                     &apos;package&apos; =&gt; &apos;pname&apos;,&#xA;                    [&apos;channel&apos; =&gt; &apos;channame&apos;,]&#xA;                    [&apos;version&apos; =&gt; &apos;version&apos;,]&#xA;                    [&apos;state&apos; =&gt; &apos;state&apos;,])&#xA;                    or a string of format [channame/]pname[-version|-state]&#xA;" ilk="function" line="1651" lineend="1745" name="_fromString" returns="boolean" signature="_fromString($param)"><variable ilk="argument" line="1651" name="param" /><variable citdl="this._downloader._getPackageDownloadUrl()" line="1713" name="info" /><variable citdl="PEAR.raiseError()" line="1690" name="err" /><variable citdl="this._analyzeDownloadURL()" line="1736" name="ret" /><variable citdl="pname.getUserInfo()" line="1665" name="parsed" /><variable citdl="this._registry.parsePackageName()" line="1656" name="pname" /><variable citdl="this._downloader.getOptions()" line="1653" name="options" /><variable citdl="this._config.get()" line="1654" name="channel" /></scope><scope doc="&#xA;&lt;array&gt; output  - of package.getDownloadURL&#xA;&lt;string|array|object&gt; information  - for detecting packages to be downloaded, and&#xA;                           for errors&#xA;&lt;array&gt; name  - information of the package&#xA;&lt;array|null&gt; packages  - to be downloaded&#xA;&lt;bool&gt; is  - this an optional dependency?&#xA;&lt;bool&gt; is  - this any kind of dependency?&#xA;Access private&#xA;" ilk="function" line="1757" lineend="1987" name="_analyzeDownloadURL" returns="boolean" signature="_analyzeDownloadURL($info, $param, $pname, $params = null, $optional = false, $isdependency = false)"><variable ilk="argument" line="1757" name="info" /><variable ilk="argument" line="1757" name="param" /><variable ilk="argument" line="1757" name="pname" /><variable default="null" ilk="argument" line="1757" name="params" /><variable default="false" ilk="argument" line="1757" name="optional" /><variable default="false" ilk="argument" line="1757" name="isdependency" /><variable citdl="boolean" line="1773" name="err" /><variable line="1765" name="saveparam" /><variable citdl="this._registry.packageInfo()" line="1796" name="package_version" /><variable citdl="this._registry.packageInfo()" line="1956" name="stability" /><variable citdl="string" line="1831" name="vs" /><variable citdl="string" line="1827" name="instead" /><variable citdl="this._downloader.getOptions()" line="1936" name="options" /><variable citdl="this._config.get()" line="1793" name="preferred_state" /></scope></scope></scope>