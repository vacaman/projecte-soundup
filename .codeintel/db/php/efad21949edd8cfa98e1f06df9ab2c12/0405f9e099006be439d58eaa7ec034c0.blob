<scope ilk="blob" lang="PHP" name="User.php" src="/home/ubuntu/workspace/basic/vendor/dektrium/yii2-user/models/User.php"><scope doc="This file is part of the Dektrium project.&#xA;&#xA;(c) Dektrium project &lt;http://github.com/dektrium/&gt;&#xA;&#xA;For the full copyright and license information, please view the LICENSE&#xA;file that was distributed with this source code." ilk="namespace" line="12" name="dektrium\user\models"><import line="14" module="dektrium\user" symbol="Finder" /><import line="15" module="dektrium\user\helpers" symbol="Password" /><import line="16" module="dektrium\user" symbol="Mailer" /><import line="17" module="dektrium\user" symbol="Module" /><import line="18" module="dektrium\user\traits" symbol="ModuleTrait" /><import line="19" module="yii\base" symbol="NotSupportedException" /><import line="20" module="yii\behaviors" symbol="TimestampBehavior" /><import line="21" module="yii\db" symbol="ActiveRecord" /><import alias="WebApplication" line="22" module="yii\web" symbol="Application" /><import line="23" module="yii\web" symbol="IdentityInterface" /><import line="24" module="yii\helpers" symbol="ArrayHelper" /><scope classrefs="ActiveRecord" doc="User ActiveRecord model.&#xA;&#xA;@property bool    $isAdmin&#xA;@property bool    $isBlocked&#xA;@property bool    $isConfirmed&#xA;&#xA;Database fields:&#xA;@property integer $id&#xA;@property string  $username&#xA;@property string  $email&#xA;@property string  $unconfirmed_email&#xA;@property string  $password_hash&#xA;@property string  $auth_key&#xA;@property string  $registration_ip&#xA;@property integer $confirmed_at&#xA;@property integer $blocked_at&#xA;@property integer $created_at&#xA;@property integer $updated_at&#xA;@property integer $last_login&#xA;@property integer $flags&#xA;&#xA;Defined relations:&#xA;@property Account[] $accounts&#xA;@property Profile   $profile&#xA;&#xA;Dependencies:&#xA;@property-read Finder $finder&#xA;@property-read Module $module&#xA;@property-read Mailer $mailer&#xA;&#xA;@author Dmitry Erofeev &lt;dmeroff@gmail.com&gt;" ilk="class" interfacerefs="IdentityInterface" line="60" lineend="567" name="User" traitrefs="ModuleTrait"><variable citdl="Profile" line="60" name="profile" /><variable citdl="bool" line="60" name="isConfirmed" /><variable citdl="integer" line="60" name="confirmed_at" /><variable citdl="integer" line="60" name="updated_at" /><variable citdl="Module" line="60" name="module" /><variable citdl="integer" line="60" name="id" /><variable citdl="string" line="60" name="password_hash" /><variable citdl="bool" line="60" name="isAdmin" /><variable citdl="integer" line="60" name="last_login" /><variable citdl="string" line="60" name="registration_ip" /><variable citdl="string" line="60" name="email" /><variable citdl="Finder" line="60" name="finder" /><variable citdl="username" line="60" name="username" /><variable citdl="Mailer" line="60" name="mailer" /><variable citdl="integer" line="60" name="blocked_at" /><variable citdl="string" line="60" name="auth_key" /><variable citdl="string" line="60" name="unconfirmed_email" /><variable citdl="bool" line="60" name="isBlocked" /><variable citdl="integer" line="60" name="created_at" /><variable citdl="integer" line="60" name="flags" /><variable citdl="string" ilk="constant" line="64" name="BEFORE_CREATE" /><variable citdl="string" ilk="constant" line="65" name="AFTER_CREATE" /><variable citdl="string" ilk="constant" line="66" name="BEFORE_REGISTER" /><variable citdl="string" ilk="constant" line="67" name="AFTER_REGISTER" /><variable citdl="string" ilk="constant" line="68" name="BEFORE_CONFIRM" /><variable citdl="string" ilk="constant" line="69" name="AFTER_CONFIRM" /><variable citdl="int" ilk="constant" line="72" name="OLD_EMAIL_CONFIRMED" /><variable citdl="int" ilk="constant" line="73" name="NEW_EMAIL_CONFIRMED" /><variable attributes="public" citdl="string" doc="@var string Plain password. Used for model validation." line="76" name="password" /><variable attributes="private" citdl="Profile" doc="@var Profile|null" line="79" name="_profile" /><variable attributes="public static" citdl="string" doc="@var string Default username regexp" line="82" name="usernameRegexp" /><scope attributes="protected" doc="&#xA;Returns finder &#xA;Throws \yii\base\InvalidConfigException&#xA;" ilk="function" line="88" lineend="91" name="getFinder" returns="Finder" signature="finder getFinder()" /><scope attributes="protected" doc="&#xA;Returns mailer &#xA;Throws \yii\base\InvalidConfigException&#xA;" ilk="function" line="97" lineend="100" name="getMailer" returns="Mailer" signature="mailer getMailer()" /><scope attributes="public" doc="&#xA;Returns bool  - Whether the user is confirmed or not.&#xA;" ilk="function" line="105" lineend="108" name="getIsConfirmed" returns="bool" signature="bool getIsConfirmed()" /><scope attributes="public" doc="&#xA;Returns bool  - Whether the user is blocked or not.&#xA;" ilk="function" line="113" lineend="116" name="getIsBlocked" returns="bool" signature="bool getIsBlocked()" /><scope attributes="public" doc="&#xA;Returns bool  - Whether the user is an admin or not.&#xA;" ilk="function" line="121" lineend="127" name="getIsAdmin" returns="bool" signature="bool getIsAdmin()" /><scope attributes="public" doc="&#xA;Returns \yii\db\activequery &#xA;" ilk="function" line="132" lineend="135" name="getProfile" returns="\yii\db\ActiveQuery" signature="\yii\db\activequery getProfile()" /><scope attributes="public" doc="&#xA;&lt;profile&gt; $profile  - &#xA;" ilk="function" line="140" lineend="143" name="setProfile" signature="setProfile(Profile $profile)"><variable citdl="Profile" ilk="argument" line="140" name="profile" /></scope><scope attributes="public" doc="&#xA;Returns account[]  - Connected accounts ($provider =&gt; $account)&#xA;" ilk="function" line="148" lineend="159" name="getAccounts" returns="Account" signature="account getAccounts()"><variable citdl="this.hasMany().all()" line="151" name="accounts" /><variable citdl="Account" doc="@var Account $account" line="154" name="account" /><variable line="150" name="connected" /></scope><scope attributes="public" doc="&#xA;Returns connected account by provider.&#xA;&lt;string&gt; $provider  - &#xA;Returns account|null &#xA;" ilk="function" line="166" lineend="172" name="getAccountByProvider" returns="Account" signature="account getAccountByProvider(string $provider)"><variable citdl="string" ilk="argument" line="166" name="provider" /><variable citdl="this.getAccounts()" line="168" name="accounts" /></scope><scope attributes="public" doc="&#xA;Inheritdoc&#xA;" ilk="function" line="175" lineend="178" name="getId" returns="this.getAttribute()" signature="getId()" /><scope attributes="public" doc="&#xA;Inheritdoc&#xA;" ilk="function" line="181" lineend="184" name="getAuthKey" returns="this.getAttribute()" signature="getAuthKey()" /><scope attributes="public" doc="&#xA;Inheritdoc&#xA;" ilk="function" line="187" lineend="199" name="attributeLabels" signature="attributeLabels()" /><scope attributes="public" doc="&#xA;Inheritdoc&#xA;" ilk="function" line="202" lineend="207" name="behaviors" signature="behaviors()" /><scope attributes="public" doc="&#xA;Inheritdoc&#xA;" ilk="function" line="210" lineend="220" name="scenarios" returns="ArrayHelper.merge()" signature="scenarios()"><variable line="212" name="scenarios" /></scope><scope attributes="public" doc="&#xA;Inheritdoc&#xA;" ilk="function" line="223" lineend="252" name="rules" signature="rules()" /><scope attributes="public" doc="&#xA;Inheritdoc&#xA;" ilk="function" line="255" lineend="258" name="validateAuthKey" returns="this.getAttribute()" signature="validateAuthKey($authKey)"><variable ilk="argument" line="255" name="authKey" /></scope><scope attributes="public" doc="&#xA;Creates new user account. It generates password if it is not provided by user.&#xA;Returns bool &#xA;" ilk="function" line="265" lineend="296" name="create" returns="bool" signature="bool create()"><variable citdl="this.getDb().beginTransaction()" line="271" name="transaction" /><variable attributes="__not_yet_defined__" line="291" name="e" /></scope><scope attributes="public" doc="&#xA;This method is used to register new user account. If Module::enableConfirmation is set true, this method&#xA;will generate new confirmation token and use mailer to send it to the user.&#xA;Returns bool &#xA;" ilk="function" line="304" lineend="340" name="register" returns="bool" signature="bool register()"><variable citdl="Token" doc="@var Token $token" line="325" name="token" /><variable citdl="this.getDb().beginTransaction()" line="310" name="transaction" /><variable attributes="__not_yet_defined__" line="335" name="e" /></scope><scope attributes="public" doc="&#xA;Attempts user confirmation.&#xA;&lt;string&gt; $code  - Confirmation code.&#xA;Returns boolean &#xA;" ilk="function" line="349" lineend="369" name="attemptConfirmation" returns="boolean" signature="boolean attemptConfirmation(string $code)"><variable citdl="string" ilk="argument" line="349" name="code" /><variable citdl="this.finder.findTokenByParams()" line="351" name="token" /><variable citdl="\Yii.t()" line="357" name="message" /><variable citdl="boolean" line="362" name="success" /></scope><scope attributes="public" doc="&#xA;Generates a new password and sends it to the user.&#xA;&lt;string&gt; $code  - Confirmation code.&#xA;Returns boolean &#xA;" ilk="function" line="378" lineend="384" name="resendPassword" returns="boolean" signature="boolean resendPassword(string $code)"><variable citdl="string" ilk="argument" line="378" name="code" /></scope><scope attributes="public" doc="&#xA;This method attempts changing user email. If user&apos;s &quot;unconfirmed_email&quot; field is empty is returns false, else if&#xA;somebody already has email that equals user&apos;s &quot;unconfirmed_email&quot; it returns false, otherwise returns true and&#xA;updates user&apos;s password.&#xA;&lt;string&gt; $code  - &#xA;Returns bool &#xA;Throws \Exception&#xA;" ilk="function" line="396" lineend="447" name="attemptEmailChange" returns="bool" signature="bool attemptEmailChange(string $code)"><variable citdl="string" ilk="argument" line="396" name="code" /><variable citdl="Token" doc="@var Token $token" line="404" name="token" /></scope><scope attributes="public" doc="&#xA;Confirms the user by setting &apos;confirmed_at&apos; field to current time.&#xA;" ilk="function" line="452" lineend="458" name="confirm" returns="result" signature="confirm()"><variable citdl="boolean" line="455" name="result" /></scope><scope attributes="public" doc="&#xA;Resets password.&#xA;&lt;string&gt; $password  - &#xA;Returns bool &#xA;" ilk="function" line="467" lineend="470" name="resetPassword" returns="bool" signature="bool resetPassword(string $password)"><variable citdl="string" ilk="argument" line="467" name="password" /></scope><scope attributes="public" doc="&#xA;Blocks the user by setting &apos;blocked_at&apos; field to current time and regenerates auth_key.&#xA;" ilk="function" line="475" lineend="481" name="block" returns="boolean" signature="block()" /><scope attributes="public" doc="&#xA;UnBlocks the user by setting &apos;blocked_at&apos; field to null.&#xA;" ilk="function" line="486" lineend="489" name="unblock" returns="boolean" signature="unblock()" /><scope attributes="public" doc="&#xA;Generates new username based on email address, or creates new username&#xA;like &quot;emailuser1&quot;.&#xA;" ilk="function" line="495" lineend="519" name="generateUsername" returns="this.username" signature="generateUsername()"><variable citdl="explode()" line="498" name="username" /><variable citdl="this.finder.userQuery.max()" line="511" name="max" /></scope><scope attributes="public" doc="&#xA;Inheritdoc&#xA;" ilk="function" line="522" lineend="536" name="beforeSave" signature="beforeSave($insert)"><variable ilk="argument" line="522" name="insert" /></scope><scope attributes="public" doc="&#xA;Inheritdoc&#xA;" ilk="function" line="539" lineend="548" name="afterSave" signature="afterSave($insert, $changedAttributes)"><variable ilk="argument" line="539" name="insert" /><variable ilk="argument" line="539" name="changedAttributes" /></scope><scope attributes="public static" doc="&#xA;Inheritdoc&#xA;" ilk="function" line="551" lineend="554" name="tableName" returns="string" signature="tableName()" /><scope attributes="public static" doc="&#xA;Inheritdoc&#xA;" ilk="function" line="557" lineend="560" name="findIdentity" signature="findIdentity($id)"><variable ilk="argument" line="557" name="id" /></scope><scope attributes="public static" doc="&#xA;Inheritdoc&#xA;" ilk="function" line="563" lineend="566" name="findIdentityByAccessToken" signature="findIdentityByAccessToken($token, $type = null)"><variable ilk="argument" line="563" name="token" /><variable default="null" ilk="argument" line="563" name="type" /></scope></scope></scope></scope>