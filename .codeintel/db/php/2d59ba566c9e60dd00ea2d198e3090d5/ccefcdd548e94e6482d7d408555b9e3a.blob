<scope ilk="blob" lang="PHP" name="PEAR5.php" src="/usr/share/php/PEAR5.php"><scope doc="This is only meant for PHP 5 to get rid of certain strict warning&#xA;that doesn&apos;t get hidden since it&apos;s in the shutdown function" ilk="class" line="6" lineend="33" name="PEAR5"><scope attributes="static" doc="&#xA;If you have a class that&apos;s mostly/entirely static, and you need static&#xA;properties, you can use this method to simulate them. Eg. in your method(s)&#xA;do this: $myVar = &amp;PEAR5::getStaticProperty(&apos;myclass&apos;, &apos;myVar&apos;);&#xA;You MUST use a reference, or they will not persist!&#xA;Access public&#xA;&lt;string&gt; $class  - The calling classname, to prevent clashes&#xA;&lt;string&gt; $var  - The variable to retrieve.&#xA;Returns mixed  - A reference to the variable. If not set it will be&#xA;                auto initialised to NULL.&#xA;" ilk="function" line="20" lineend="32" name="getStaticProperty" returns="mixed" signature="mixed &amp;getStaticProperty(string $class, string $var)"><variable citdl="string" ilk="argument" line="20" name="class" /><variable citdl="string" ilk="argument" line="20" name="var" /></scope><variable attributes="static" line="22" name="properties" /></scope></scope>