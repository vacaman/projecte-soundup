<scope ilk="blob" lang="PHP" name="Role.php" src="/usr/share/php/PEAR/Installer/Role.php"><import line="20" module="PEAR/Installer/Role/Common.php" /><import line="21" module="PEAR/XMLParser.php" /><import line="77" module="_" /><scope doc="@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.9.4&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a1" ilk="class" line="32" lineend="276" name="PEAR_Installer_Role"><scope doc="Set up any additional configuration variables that file roles require&#xA;&#xA;Never call this directly, it is called by the PEAR_Config constructor&#xA;@param PEAR_Config&#xA;@access private&#xA;@static" ilk="function" line="42" lineend="55" name="initializeConfig" signature="initializeConfig(&amp; $config)"><variable ilk="argument" line="42" name="config" /><variable citdl="GLOBALS[]" line="48" name="info" /><variable line="48" name="class" /></scope><scope doc="@param PEAR_PackageFile_v2&#xA;@param string role name&#xA;@param PEAR_Config&#xA;@return PEAR_Installer_Role_Common&#xA;@static" ilk="function" line="64" lineend="82" name="factory" returns="PEAR_Installer_Role_Common" signature="pear_installer_role_common &amp;factory($pkg, $role, &amp; $config)"><variable ilk="argument" line="64" name="pkg" /><variable ilk="argument" line="64" name="role" /><variable ilk="argument" line="64" name="config" /><variable citdl="boolean" line="71" name="a" /><variable line="80" name="b" /></scope><scope doc="Get a list of file roles that are valid for the particular release type.&#xA;&#xA;For instance, src files serve no purpose in regular php releases.&#xA;@param string&#xA;@param bool clear cache&#xA;@return array&#xA;@static" ilk="function" line="93" lineend="116" name="getValidRoles" returns="array" signature="array getValidRoles($release, $clear = false)"><variable ilk="argument" line="93" name="release" /><variable default="false" ilk="argument" line="93" name="clear" /><variable citdl="GLOBALS[]" line="109" name="okreleases" /><variable line="109" name="role" /><variable citdl="array()" line="101" name="ret" /></scope><variable attributes="static" citdl="array()" line="99" name="ret" /><scope doc="&#xA;Get a list of roles that require their files to be installed&#xA;Most roles must be installed, but src and package roles, for instance&#xA;are pseudo-roles.  src files are compiled into a new extension.  Package&#xA;roles are actually fully bundled releases of a package&#xA;&lt;bool&gt; clear  - cache&#xA;Returns array &#xA;Static&#xA;" ilk="function" line="128" lineend="151" name="getInstallableRoles" returns="array" signature="array getInstallableRoles($clear = false)"><variable default="false" ilk="argument" line="128" name="clear" /><variable citdl="GLOBALS[]" line="144" name="okreleases" /><variable line="144" name="role" /><variable attributes="__not_yet_defined__" citdl="array()" line="136" name="ret" /></scope><scope doc="&#xA;Return an array of roles that are affected by the baseinstalldir attribute&#xA;Most roles ignore this attribute, and instead install directly into:&#xA;PackageName/filepath&#xA;so a tests file tests/file.phpt is installed into PackageName/tests/filepath.php&#xA;&lt;bool&gt; clear  - cache&#xA;Returns array &#xA;Static&#xA;" ilk="function" line="163" lineend="186" name="getBaseinstallRoles" returns="array" signature="array getBaseinstallRoles($clear = false)"><variable default="false" ilk="argument" line="163" name="clear" /><variable citdl="GLOBALS[]" line="179" name="okreleases" /><variable line="179" name="role" /><variable attributes="__not_yet_defined__" citdl="array()" line="171" name="ret" /></scope><scope doc="&#xA;Return an array of file roles that should be analyzed for PHP content at package time,&#xA;like the &quot;php&quot; role.&#xA;&lt;bool&gt; clear  - cache&#xA;Returns array &#xA;Static&#xA;" ilk="function" line="195" lineend="218" name="getPhpRoles" returns="array" signature="array getPhpRoles($clear = false)"><variable default="false" ilk="argument" line="195" name="clear" /><variable citdl="GLOBALS[]" line="211" name="okreleases" /><variable line="211" name="role" /><variable attributes="__not_yet_defined__" citdl="array()" line="203" name="ret" /></scope><scope doc="&#xA;Scan through the Command directory looking for classes&#xA;and see what commands they implement.&#xA;&lt;string&gt; which  - directory to look for classes, defaults to&#xA;              the Installer/Roles subdirectory of&#xA;              the directory from where this file (__FILE__) is&#xA;              included.&#xA;Returns bool  - TRUE on success, a PEAR error on failure&#xA;Access public&#xA;Static&#xA;" ilk="function" line="232" lineend="275" name="registerRoles" returns="bool" signature="bool registerRoles($dir = null)"><variable default="null" ilk="argument" line="232" name="dir" /><variable citdl="PEAR_XMLParser" line="235" name="parser" /><variable citdl="string" line="257" name="file" /><variable line="249" name="entry" /><variable citdl="parser.getData()" line="259" name="data" /><variable citdl="string" line="254" name="class" /><variable line="244" name="dp" /></scope></scope></scope>