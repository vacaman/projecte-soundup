<scope ilk="blob" lang="PHP" name="v1.php" src="/usr/share/php/PEAR/PackageFile/Parser/v1.php"><import line="19" module="PEAR/PackageFile/v1.php" /><scope doc="Parser for package.xml version 1.0&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: @PEAR-VER@&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a1" ilk="class" line="31" lineend="458" name="PEAR_PackageFile_Parser_v1"><variable citdl="c.getRegistry()" line="33" name="_registry" /><variable citdl="c" line="34" name="_config" /><variable citdl="l" line="35" name="_logger" /><scope doc="BC hack to allow PEAR_Common::infoFromString() to sort of&#xA;work with the version 2.0 format - there&apos;s no filelist though&#xA;@param PEAR_PackageFile_v2" ilk="function" line="41" lineend="46" name="fromV2" signature="fromV2($packagefile)"><variable ilk="argument" line="41" name="packagefile" /><variable citdl="packagefile.getArray()" line="43" name="info" /><variable citdl="PEAR_PackageFile_v1" line="44" name="ret" /></scope><scope ilk="function" line="48" lineend="52" name="setConfig" signature="setConfig(&amp; $c)"><variable ilk="argument" line="48" name="c" /></scope><scope ilk="function" line="54" lineend="57" name="setLogger" signature="setLogger(&amp; $l)"><variable ilk="argument" line="54" name="l" /></scope><scope doc="&#xA;&lt;string&gt; contents  - of package.xml file, version 1.0&#xA;Returns bool  - success of parsing&#xA;" ilk="function" line="63" lineend="109" name="parse" returns="bool" signature="bool &amp;parse($data, $file, $archive = false)"><variable ilk="argument" line="63" name="data" /><variable ilk="argument" line="63" name="file" /><variable default="false" ilk="argument" line="63" name="archive" /><variable citdl="PEAR.raiseError()" line="70" name="a" /><variable citdl="xml_parser_create()" line="68" name="xp" /><variable citdl="xml_get_error_code()" line="91" name="code" /><variable citdl="PEAR_PackageFile_v1" line="101" name="pf" /><variable citdl="xml_get_current_line_number()" line="92" name="line" /></scope><variable citdl="array()" line="78" name="element_stack" /><variable citdl="array()" line="79" name="_packageInfo" /><variable citdl="boolean" line="80" name="current_element" /><variable citdl="this._packageInfo" line="83" name="filelist" /><variable citdl="array()" line="84" name="dir_names" /><variable citdl="boolean" line="85" name="in_changelog" /><variable citdl="int" line="86" name="d_i" /><variable citdl="string" line="87" name="cdata" /><variable citdl="boolean" line="88" name="_isValid" /><scope doc="&#xA;Unindent given string&#xA;&lt;string&gt; $str  - The string that has to be unindented.&#xA;Returns string &#xA;Access private&#xA;" ilk="function" line="119" lineend="136" name="_unIndent" returns="string" signature="string _unIndent(string $str)"><variable citdl="string" ilk="argument" line="119" name="str" /><variable citdl="substr()" line="125" name="indent" /><variable citdl="explode()[]" line="128" name="line" /><variable citdl="strspn()" line="124" name="indent_len" /><variable citdl="string" line="126" name="data" /></scope><scope doc="&#xA;XML parser callback for ending elements.  Used for version 1.0&#xA;packages.&#xA;&lt;resource&gt; $xp  - XML parser resource&#xA;&lt;string&gt; $name  - name of ending element&#xA;Returns void &#xA;Access private&#xA;" ilk="function" line="152" lineend="284" name="_element_start_1_0" signature="void _element_start_1_0(resource $xp, string $name, $attribs)"><variable citdl="resource" ilk="argument" line="152" name="xp" /><variable citdl="string" ilk="argument" line="152" name="name" /><variable ilk="argument" line="152" name="attribs" /><variable citdl="string" line="189" name="path" /><variable citdl="sizeof()" line="156" name="spos" /><variable citdl="this.dir_names[]" line="191" name="dir" /></scope><variable line="157" name="prev_element" /><variable citdl="attribs" line="158" name="current_attributes" /><variable citdl="attribs" line="178" name="dir_install" /><variable citdl="attribs" line="181" name="dir_role" /><variable citdl="path" line="198" name="current_path" /><variable citdl="int" line="219" name="m_i" /><variable citdl="this._packageInfo" line="228" name="current_maintainer" /><variable citdl="int" line="232" name="c_i" /><variable citdl="this._packageInfo" line="238" name="current_release" /><scope doc="&#xA;XML parser callback for ending elements.  Used for version 1.0&#xA;packages.&#xA;&lt;resource&gt; $xp  - XML parser resource&#xA;&lt;string&gt; $name  - name of ending element&#xA;Returns void &#xA;Access private&#xA;" ilk="function" line="300" lineend="434" name="_element_end_1_0" signature="void _element_end_1_0(resource $xp, string $name)"><variable citdl="resource" ilk="argument" line="300" name="xp" /><variable citdl="string" ilk="argument" line="300" name="name" /><variable citdl="string" line="395" name="path" /><variable citdl="sizeof()" line="431" name="spos" /><variable citdl="trim()" line="302" name="data" /><variable citdl="this.dir_names[]" line="397" name="dir" /></scope><scope doc="&#xA;XML parser callback for character data.  Used for version 1.0&#xA;packages.&#xA;&lt;resource&gt; $xp  - XML parser resource&#xA;&lt;string&gt; $name  - character data&#xA;Returns void &#xA;Access private&#xA;" ilk="function" line="450" lineend="455" name="_pkginfo_cdata_1_0" signature="void _pkginfo_cdata_1_0(resource $xp, $data, string $name)"><variable citdl="resource" ilk="argument" line="450" name="xp" /><variable ilk="argument" line="450" name="data" /><variable citdl="string" ilk="argument" line="450" name="name" /></scope></scope></scope>