<scope ilk="blob" lang="PHP" name="Validator.php" src="/usr/share/php/PEAR/PackageFile/v2/Validator.php"><scope doc="Private validation class used by PEAR_PackageFile_v2 - do not use directly, its&#xA;sole purpose is to split up the PEAR/PackageFile/v2.php file to make it smaller&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.9.4&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a8&#xA;@access private" ilk="class" line="29" lineend="2154" name="PEAR_PackageFile_v2_Validator"><variable citdl="array" doc="@var array" line="34" name="_packageInfo" /><variable citdl="PEAR_PackageFile_v2" doc="@var PEAR_PackageFile_v2" line="38" name="_pf" /><variable citdl="PEAR_ErrorStack" doc="@var PEAR_ErrorStack" line="42" name="_stack" /><variable citdl="int" doc="@var int" line="46" name="_isValid" /><variable citdl="int" doc="@var int" line="50" name="_filesValid" /><variable citdl="int" doc="@var int" line="54" name="_curState" /><scope doc="@param PEAR_PackageFile_v2&#xA;@param int" ilk="function" line="59" lineend="303" name="validate" returns="boolean" signature="validate(&amp; $pf, $state = PEAR_VALIDATE_NORMAL)"><variable ilk="argument" line="59" name="pf" /><variable default="PEAR_VALIDATE_NORMAL" ilk="argument" line="59" name="state" /><variable citdl="this._packageInfo" line="192" name="roles" /><variable citdl="this._pf._registry.getChannel()" line="249" name="chan" /><variable citdl="failures[]" line="270" name="error" /><variable citdl="this._packageInfo" line="240" name="list" /><variable citdl="boolean" line="190" name="fail" /><variable citdl="chan.getValidationObject()" line="256" name="validator" /><variable citdl="roles[]" line="196" name="role" /><variable citdl="chan.getValidationPackage()" line="253" name="valpack" /><variable citdl="this._packageInfo" line="110" name="test" /><variable citdl="validator.getFailures()" line="269" name="failures" /><variable citdl="failures[]" line="274" name="warning" /><variable citdl="array()" line="109" name="structure" /></scope><scope ilk="function" line="305" lineend="406" name="_stupidSchemaValidate" returns="boolean" signature="_stupidSchemaValidate($structure, $xml, $root)"><variable ilk="argument" line="305" name="structure" /><variable ilk="argument" line="305" name="xml" /><variable ilk="argument" line="305" name="root" /><variable citdl="array_keys()" line="310" name="keys" /><variable citdl="boolean" line="325" name="loose" /><variable citdl="boolean" line="318" name="mismatch" /><variable citdl="boolean" line="317" name="ret" /><variable citdl="test[]" line="326" name="choice" /><variable citdl="this._processStructure()" line="323" name="test" /><variable citdl="xml" line="321" name="tag" /><variable citdl="next()" line="312" name="key" /><variable citdl="structure[]" line="319" name="struc" /><variable citdl="optionaltags" line="316" name="unfoundtags" /></scope><scope ilk="function" line="408" lineend="441" name="_processAttribs" returns="ret" signature="_processAttribs($choice, $tag, $context)"><variable ilk="argument" line="408" name="choice" /><variable ilk="argument" line="408" name="tag" /><variable ilk="argument" line="408" name="context" /><variable line="419" name="i" /><variable citdl="choice[]" line="421" name="attrib" /><variable citdl="boolean" line="418" name="ret" /><variable citdl="tag" line="414" name="tags" /></scope><scope ilk="function" line="443" lineend="465" name="_processStructure" returns="ret" signature="_processStructure($key)"><variable ilk="argument" line="443" name="key" /><variable citdl="key" line="453" name="multi" /><variable citdl="pieces[]" line="448" name="piece" /><variable citdl="array()" line="445" name="ret" /></scope><scope ilk="function" line="467" lineend="490" name="_validateStabilityVersion" signature="_validateStabilityVersion()"><variable citdl="this._stupidSchemaValidate()" line="470" name="a" /><variable citdl="array()" line="469" name="structure" /></scope><scope ilk="function" line="492" lineend="514" name="_validateMaintainers" signature="_validateMaintainers()"><variable citdl="array()[]" line="501" name="type" /><variable citdl="this._packageInfo[]" line="506" name="lead" /><variable citdl="array()" line="500" name="structure" /></scope><scope ilk="function" line="516" lineend="549" name="_validatePhpDep" signature="_validatePhpDep($dep, $installcondition = false)"><variable ilk="argument" line="516" name="dep" /><variable default="false" ilk="argument" line="516" name="installcondition" /><variable citdl="dep[]" line="541" name="exclude" /><variable citdl="installcondition" line="523" name="type" /><variable citdl="array()" line="522" name="structure" /></scope><scope ilk="function" line="551" lineend="593" name="_validatePearinstallerDep" signature="_validatePearinstallerDep($dep)"><variable ilk="argument" line="551" name="dep" /><variable citdl="dep[]" line="585" name="exclude" /><variable citdl="array()" line="558" name="structure" /></scope><scope ilk="function" line="595" lineend="678" name="_validatePackageDep" signature="_validatePackageDep($dep, $group, $type = &apos;&lt;package&gt;&apos;)"><variable ilk="argument" line="595" name="dep" /><variable ilk="argument" line="595" name="group" /><variable default="&apos;&lt;package&gt;&apos;" ilk="argument" line="595" name="type" /><variable citdl="dep[]" line="670" name="exclude" /><variable citdl="array()" line="604" name="structure" /></scope><scope ilk="function" line="680" lineend="689" name="_validateSubpackageDep" signature="_validateSubpackageDep($dep, $group)"><variable ilk="argument" line="680" name="dep" /><variable ilk="argument" line="680" name="group" /></scope><scope ilk="function" line="691" lineend="748" name="_validateExtensionDep" signature="_validateExtensionDep($dep, $group = false, $installcondition = false)"><variable ilk="argument" line="691" name="dep" /><variable default="false" ilk="argument" line="691" name="group" /><variable default="false" ilk="argument" line="691" name="installcondition" /><variable citdl="dep[]" line="741" name="exclude" /><variable citdl="string" line="711" name="type" /><variable citdl="array()" line="700" name="structure" /></scope><scope ilk="function" line="750" lineend="764" name="_validateOsDep" signature="_validateOsDep($dep, $installcondition = false)"><variable ilk="argument" line="750" name="dep" /><variable default="false" ilk="argument" line="750" name="installcondition" /><variable citdl="installcondition" line="756" name="type" /><variable citdl="array()" line="755" name="structure" /></scope><scope ilk="function" line="766" lineend="774" name="_validateArchDep" signature="_validateArchDep($dep, $installcondition = false)"><variable ilk="argument" line="766" name="dep" /><variable default="false" ilk="argument" line="766" name="installcondition" /><variable citdl="installcondition" line="772" name="type" /><variable citdl="array()" line="771" name="structure" /></scope><scope ilk="function" line="776" lineend="803" name="_validateInstallConditions" returns="boolean" signature="_validateInstallConditions($cond, $release)"><variable ilk="argument" line="776" name="cond" /><variable ilk="argument" line="776" name="release" /><variable citdl="array()[]" line="788" name="type" /><variable citdl="cond" line="790" name="iter" /><variable citdl="array()" line="783" name="structure" /><variable citdl="iter[]" line="794" name="package" /></scope><scope ilk="function" line="805" lineend="923" name="_validateDependencies" returns="boolean" signature="_validateDependencies()"><variable citdl="groups[]" line="888" name="group" /><variable citdl="iter[]" line="844" name="package" /><variable citdl="array()" line="840" name="iter" /><variable citdl="array()[]" line="816" name="simpledep" /><variable citdl="this._packageInfo" line="879" name="groups" /><variable citdl="array()[]" line="838" name="type" /><variable citdl="array()" line="811" name="structure" /></scope><scope ilk="function" line="925" lineend="962" name="_validateCompatible" signature="_validateCompatible()"><variable citdl="this._packageInfo" line="927" name="compat" /><variable citdl="package[]" line="954" name="exclude" /><variable citdl="array()" line="931" name="required" /><variable citdl="string" line="933" name="type" /><variable citdl="compat[]" line="932" name="package" /></scope><scope ilk="function" line="964" lineend="977" name="_validateBundle" returns="this._NoBundledPackages()" signature="_validateBundle($list)"><variable ilk="argument" line="964" name="list" /><variable citdl="list[]" line="972" name="package" /></scope><scope ilk="function" line="979" lineend="1216" name="_validateFilelist" returns="this._validateBundle()" signature="_validateFilelist($list = false, $allowignore = false, $dirs = &apos;&apos;)"><variable default="false" ilk="argument" line="979" name="list" /><variable default="false" ilk="argument" line="979" name="allowignore" /><variable default="&apos;&apos;" ilk="argument" line="979" name="dirs" /><variable citdl="this._stupidSchemaValidate()" line="1020" name="res" /><variable citdl="list" line="1001" name="_old" /><variable citdl="this._pf.getContents()" line="1024" name="fcontents" /><variable citdl="array()" line="1025" name="filelist" /><variable citdl="list[]" line="1029" name="file" /><variable citdl="iscontents" line="1011" name="dirname" /><variable citdl="boolean" line="981" name="iscontents" /><variable citdl="allowignore" line="1010" name="unknown" /><variable citdl="call_user_func()" line="1139" name="ret" /><variable citdl="roles[]" line="1101" name="role" /><variable citdl="string" line="1104" name="msg" /><variable citdl="array()" line="1107" name="params" /><variable citdl="file" line="1126" name="save" /><variable citdl="array()" line="993" name="struc" /><variable line="1132" name="task" /><variable citdl="this._packageInfo" line="1097" name="roles" /><variable line="1080" name="i" /><variable citdl="file[]" line="1132" name="value" /><variable citdl="dirs" line="1203" name="newdirs" /><variable citdl="value[]" line="1137" name="v" /><variable citdl="list[]" line="1198" name="dir" /><variable citdl="array()" line="1022" name="ignored_or_installed" /></scope><scope ilk="function" line="1218" lineend="1337" name="_validateRelease" returns="boolean" signature="_validateRelease()"><variable citdl="rel[]" line="1270" name="bin" /><variable citdl="this._packageInfo" line="1228" name="releases" /><variable citdl="prefix" line="1243" name="releasetype" /><variable citdl="array()[]" line="1242" name="prefix" /><variable citdl="releases[]" line="1235" name="rel" /><variable citdl="releasetype" line="1221" name="release" /></scope><scope doc="This is here to allow role extension through plugins&#xA;@param string" ilk="function" line="1343" lineend="1346" name="_validateRole" returns="in_array()" signature="_validateRole($role)"><variable ilk="argument" line="1343" name="role" /></scope><scope ilk="function" line="1348" lineend="1354" name="_pearVersionTooLow" signature="_pearVersionTooLow($version)"><variable ilk="argument" line="1348" name="version" /></scope><scope ilk="function" line="1356" lineend="1361" name="_invalidTagOrder" signature="_invalidTagOrder($oktags, $actual, $root)"><variable ilk="argument" line="1356" name="oktags" /><variable ilk="argument" line="1356" name="actual" /><variable ilk="argument" line="1356" name="root" /></scope><scope ilk="function" line="1363" lineend="1368" name="_ignoreNotAllowed" signature="_ignoreNotAllowed($type)"><variable ilk="argument" line="1363" name="type" /></scope><scope ilk="function" line="1370" lineend="1375" name="_fileNotAllowed" signature="_fileNotAllowed($type)"><variable ilk="argument" line="1370" name="type" /></scope><scope ilk="function" line="1377" lineend="1382" name="_oldStyleFileNotAllowed" signature="_oldStyleFileNotAllowed()" /><scope ilk="function" line="1384" lineend="1389" name="_tagMissingAttribute" signature="_tagMissingAttribute($tag, $attr, $context)"><variable ilk="argument" line="1384" name="tag" /><variable ilk="argument" line="1384" name="attr" /><variable ilk="argument" line="1384" name="context" /></scope><scope ilk="function" line="1391" lineend="1396" name="_tagHasNoAttribs" signature="_tagHasNoAttribs($tag, $context)"><variable ilk="argument" line="1391" name="tag" /><variable ilk="argument" line="1391" name="context" /></scope><scope ilk="function" line="1398" lineend="1402" name="_invalidInternalStructure" signature="_invalidInternalStructure()" /><scope ilk="function" line="1404" lineend="1410" name="_invalidFileRole" signature="_invalidFileRole($file, $dir, $role)"><variable ilk="argument" line="1404" name="file" /><variable ilk="argument" line="1404" name="dir" /><variable ilk="argument" line="1404" name="role" /></scope><scope ilk="function" line="1412" lineend="1417" name="_invalidFileName" signature="_invalidFileName($file, $dir)"><variable ilk="argument" line="1412" name="file" /><variable ilk="argument" line="1412" name="dir" /></scope><scope ilk="function" line="1419" lineend="1424" name="_invalidFileInstallAs" signature="_invalidFileInstallAs($file, $as)"><variable ilk="argument" line="1419" name="file" /><variable ilk="argument" line="1419" name="as" /></scope><scope ilk="function" line="1426" lineend="1431" name="_invalidDirName" signature="_invalidDirName($dir)"><variable ilk="argument" line="1426" name="dir" /></scope><scope ilk="function" line="1433" lineend="1438" name="_filelistCannotContainFile" signature="_filelistCannotContainFile($filelist)"><variable ilk="argument" line="1433" name="filelist" /></scope><scope ilk="function" line="1440" lineend="1445" name="_filelistMustContainDir" signature="_filelistMustContainDir($filelist)"><variable ilk="argument" line="1440" name="filelist" /></scope><scope ilk="function" line="1447" lineend="1451" name="_tagCannotBeEmpty" signature="_tagCannotBeEmpty($tag)"><variable ilk="argument" line="1447" name="tag" /></scope><scope ilk="function" line="1453" lineend="1459" name="_UrlOrChannel" signature="_UrlOrChannel($type, $name)"><variable ilk="argument" line="1453" name="type" /><variable ilk="argument" line="1453" name="name" /></scope><scope ilk="function" line="1461" lineend="1467" name="_NoChannel" signature="_NoChannel($type, $name)"><variable ilk="argument" line="1461" name="type" /><variable ilk="argument" line="1461" name="name" /></scope><scope ilk="function" line="1469" lineend="1475" name="_UrlOrChannelGroup" signature="_UrlOrChannelGroup($type, $name, $group)"><variable ilk="argument" line="1469" name="type" /><variable ilk="argument" line="1469" name="name" /><variable ilk="argument" line="1469" name="group" /></scope><scope ilk="function" line="1477" lineend="1483" name="_NoChannelGroup" signature="_NoChannelGroup($type, $name, $group)"><variable ilk="argument" line="1477" name="type" /><variable ilk="argument" line="1477" name="name" /><variable ilk="argument" line="1477" name="group" /></scope><scope ilk="function" line="1485" lineend="1489" name="_unknownChannel" signature="_unknownChannel($channel)"><variable ilk="argument" line="1485" name="channel" /></scope><scope ilk="function" line="1491" lineend="1495" name="_noPackageVersion" signature="_noPackageVersion()" /><scope ilk="function" line="1497" lineend="1501" name="_NoBundledPackages" signature="_NoBundledPackages()" /><scope ilk="function" line="1503" lineend="1507" name="_AtLeast2BundledPackages" signature="_AtLeast2BundledPackages()" /><scope ilk="function" line="1509" lineend="1513" name="_ChannelOrUri" signature="_ChannelOrUri($name)"><variable ilk="argument" line="1509" name="name" /></scope><scope ilk="function" line="1515" lineend="1519" name="_noChildTag" signature="_noChildTag($child, $tag)"><variable ilk="argument" line="1515" name="child" /><variable ilk="argument" line="1515" name="tag" /></scope><scope ilk="function" line="1521" lineend="1525" name="_invalidVersion" signature="_invalidVersion($type, $value)"><variable ilk="argument" line="1521" name="type" /><variable ilk="argument" line="1521" name="value" /></scope><scope ilk="function" line="1527" lineend="1542" name="_invalidState" signature="_invalidState($type, $value)"><variable ilk="argument" line="1527" name="type" /><variable ilk="argument" line="1527" name="value" /><variable citdl="array()" line="1529" name="states" /></scope><scope ilk="function" line="1544" lineend="1567" name="_invalidTask" signature="_invalidTask($task, $ret, $file)"><variable ilk="argument" line="1544" name="task" /><variable ilk="argument" line="1544" name="ret" /><variable ilk="argument" line="1544" name="file" /><variable citdl="array()" line="1548" name="info" /><variable citdl="string" line="1549" name="msg" /></scope><scope ilk="function" line="1569" lineend="1573" name="_unknownTask" signature="_unknownTask($task, $file)"><variable ilk="argument" line="1569" name="task" /><variable ilk="argument" line="1569" name="file" /></scope><scope ilk="function" line="1575" lineend="1580" name="_subpackageCannotProvideExtension" signature="_subpackageCannotProvideExtension($name)"><variable ilk="argument" line="1575" name="name" /></scope><scope ilk="function" line="1582" lineend="1587" name="_subpackagesCannotConflict" signature="_subpackagesCannotConflict($name)"><variable ilk="argument" line="1582" name="name" /></scope><scope ilk="function" line="1589" lineend="1593" name="_cannotProvideExtension" signature="_cannotProvideExtension($release)"><variable ilk="argument" line="1589" name="release" /></scope><scope ilk="function" line="1595" lineend="1599" name="_mustProvideExtension" signature="_mustProvideExtension($release)"><variable ilk="argument" line="1595" name="release" /></scope><scope ilk="function" line="1601" lineend="1605" name="_cannotHaveSrcpackage" signature="_cannotHaveSrcpackage($release)"><variable ilk="argument" line="1601" name="release" /></scope><scope ilk="function" line="1607" lineend="1611" name="_mustSrcPackage" signature="_mustSrcPackage($release)"><variable ilk="argument" line="1607" name="release" /></scope><scope ilk="function" line="1613" lineend="1617" name="_mustSrcuri" signature="_mustSrcuri($release)"><variable ilk="argument" line="1613" name="release" /></scope><scope ilk="function" line="1619" lineend="1623" name="_uriDepsCannotHaveVersioning" signature="_uriDepsCannotHaveVersioning($type)"><variable ilk="argument" line="1619" name="type" /></scope><scope ilk="function" line="1625" lineend="1630" name="_conflictingDepsCannotHaveVersioning" signature="_conflictingDepsCannotHaveVersioning($type)"><variable ilk="argument" line="1625" name="type" /></scope><scope ilk="function" line="1632" lineend="1637" name="_DepchannelCannotBeUri" signature="_DepchannelCannotBeUri($type)"><variable ilk="argument" line="1632" name="type" /></scope><scope ilk="function" line="1639" lineend="1644" name="_bundledPackagesMustBeFilename" signature="_bundledPackagesMustBeFilename()" /><scope ilk="function" line="1646" lineend="1651" name="_binaryPackageMustBePackagename" signature="_binaryPackageMustBePackagename()" /><scope ilk="function" line="1653" lineend="1657" name="_fileNotFound" signature="_fileNotFound($file)"><variable ilk="argument" line="1653" name="file" /></scope><scope ilk="function" line="1659" lineend="1663" name="_notInContents" signature="_notInContents($file, $tag)"><variable ilk="argument" line="1659" name="file" /><variable ilk="argument" line="1659" name="tag" /></scope><scope ilk="function" line="1665" lineend="1669" name="_cannotValidateNoPathSet" signature="_cannotValidateNoPathSet()" /><scope ilk="function" line="1671" lineend="1675" name="_usesroletaskMustHaveChannelOrUri" signature="_usesroletaskMustHaveChannelOrUri($role, $tag)"><variable ilk="argument" line="1671" name="role" /><variable ilk="argument" line="1671" name="tag" /></scope><scope ilk="function" line="1677" lineend="1681" name="_usesroletaskMustHavePackage" signature="_usesroletaskMustHavePackage($role, $tag)"><variable ilk="argument" line="1677" name="role" /><variable ilk="argument" line="1677" name="tag" /></scope><scope ilk="function" line="1683" lineend="1687" name="_usesroletaskMustHaveRoleTask" signature="_usesroletaskMustHaveRoleTask($tag, $type)"><variable ilk="argument" line="1683" name="tag" /><variable ilk="argument" line="1683" name="type" /></scope><scope ilk="function" line="1689" lineend="1693" name="_cannotConflictWithAllOs" signature="_cannotConflictWithAllOs($type)"><variable ilk="argument" line="1689" name="type" /></scope><scope ilk="function" line="1695" lineend="1699" name="_invalidDepGroupName" signature="_invalidDepGroupName($name)"><variable ilk="argument" line="1695" name="name" /></scope><scope ilk="function" line="1701" lineend="1706" name="_multipleToplevelDirNotAllowed" signature="_multipleToplevelDirNotAllowed()" /><scope ilk="function" line="1708" lineend="1712" name="_multipleInstallAs" signature="_multipleInstallAs($file)"><variable ilk="argument" line="1708" name="file" /></scope><scope ilk="function" line="1714" lineend="1718" name="_ignoreAndInstallAs" signature="_ignoreAndInstallAs($file)"><variable ilk="argument" line="1714" name="file" /></scope><scope ilk="function" line="1720" lineend="1765" name="_analyzeBundledPackages" returns="boolean" signature="_analyzeBundledPackages()"><variable citdl="this._pf.getContents()" line="1735" name="info" /><variable line="1734" name="log" /><variable citdl="inf[]" line="1757" name="err" /><variable citdl="info[]" line="1741" name="package" /><variable citdl="pkg.fromAnyFile()" line="1750" name="ret" /><variable citdl="PEAR_PackageFile" line="1740" name="pkg" /><variable citdl="dirname()" line="1731" name="dir_prefix" /><variable citdl="ret.getUserInfo()" line="1755" name="inf" /><variable citdl="PEAR_Common" line="1732" name="common" /></scope><scope ilk="function" line="1767" lineend="1832" name="_analyzePhpFiles" returns="boolean" signature="_analyzePhpFiles()"><variable citdl="this._pf.getContents()" line="1780" name="info" /><variable citdl="fa" line="1792" name="file" /><variable citdl="dirname()" line="1776" name="dir_prefix" /><variable citdl="provides[]" line="1808" name="what" /><variable line="1808" name="key" /><variable citdl="info[]" line="1790" name="fa" /><variable citdl="PEAR_Common" line="1777" name="common" /><variable citdl="array()" line="1789" name="provides" /><variable citdl="this.analyzeSourceCode()" line="1800" name="srcinfo" /><variable citdl="strlen()" line="1807" name="pnl" /><variable line="1822" name="type" /><variable line="1779" name="log" /></scope><variable citdl="pn" line="1806" name="_packageName" /><scope doc="&#xA;Analyze the source code of the given PHP file&#xA;&lt;string&gt; Filename  - of the PHP file&#xA;&lt;boolean&gt; whether  - to analyze $file as the file contents&#xA;Returns mixed &#xA;" ilk="function" line="1841" lineend="2079" name="analyzeSourceCode" returns="mixed" signature="mixed analyzeSourceCode($file, $string = false)"><variable ilk="argument" line="1841" name="file" /><variable default="false" ilk="argument" line="1841" name="string" /><variable citdl="string" line="1897" name="lastphpdoc" /><variable citdl="string" line="1901" name="current_function" /><variable citdl="int" line="1894" name="paren_level" /><variable citdl="file" line="1862" name="contents" /><variable citdl="array()" line="1906" name="declared_methods" /><variable citdl="string" line="1898" name="current_class" /><variable citdl="array()" line="1904" name="declared_interfaces" /><variable citdl="array()" line="1905" name="declared_functions" /><variable citdl="array()" line="1903" name="declared_classes" /><variable citdl="array()" line="1909" name="extends" /><variable citdl="string" line="1899" name="current_interface" /><variable citdl="this._pf.getPackage()" line="1875" name="pn" /><variable citdl="array()" line="1908" name="used_functions" /><variable citdl="array()" line="1911" name="nodeps" /><variable citdl="boolean" line="1912" name="inquote" /><variable line="1872" name="tokens" /><variable citdl="boolean" line="1913" name="interface" /><variable citdl="brace_level" line="1902" name="current_function_level" /><variable attributes="__not_yet_defined__" citdl="string" line="1916" name="data" /><variable citdl="tokens" line="2060" name="class" /><variable citdl="array()" line="1910" name="implements" /><variable line="1914" name="i" /><variable citdl="array()" line="2027" name="m" /><variable citdl="int" line="1893" name="look_for" /><variable citdl="brace_level" line="1900" name="current_class_level" /><variable attributes="__not_yet_defined__" citdl="tokens" line="1916" name="token" /><variable citdl="int" line="1895" name="bracket_level" /><variable citdl="int" line="1896" name="brace_level" /><variable citdl="array()" line="1907" name="used_classes" /></scope><scope doc="&#xA;Build a &quot;provides&quot; array from data returned by&#xA;analyzeSourceCode().  The format of the built array is like&#xA;this:&#xA; array(&#xA;   &apos;class;MyClass&apos; =&gt; &apos;array(&apos;type&apos; =&gt; &apos;class&apos;, &apos;name&apos; =&gt; &apos;MyClass&apos;),&#xA;   ...&#xA; )&#xA;&lt;array&gt; $srcinfo  - array with information about a source file&#xA;as returned by the analyzeSourceCode() method.&#xA;Returns void &#xA;Access private&#xA;" ilk="function" line="2100" lineend="2153" name="_buildProvidesArray" signature="void _buildProvidesArray(array $srcinfo)"><variable citdl="array" ilk="argument" line="2100" name="srcinfo" /><variable citdl="string" line="2126" name="function" /><variable citdl="basename()" line="2107" name="file" /><variable citdl="array()" line="2106" name="providesret" /><variable citdl="methods[]" line="2125" name="method" /><variable citdl="strlen()" line="2109" name="pnl" /><variable citdl="string" line="2111" name="key" /><variable line="2108" name="pn" /><variable citdl="srcinfo[]" line="2110" name="class" /><variable citdl="srcinfo[]" line="2124" name="methods" /></scope></scope><variable citdl="T_COMMENT" ilk="constant" line="1850" name="T_DOC_COMMENT" /><variable ilk="constant" line="1854" name="T_INTERFACE" /><variable ilk="constant" line="1858" name="T_IMPLEMENTS" /></scope>